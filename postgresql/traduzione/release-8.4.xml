<?xml version="1.0" encoding="UTF-8"?>
<!-- $PostgreSQL$ -->
<!-- See header comment in release.sgml about typical markup -->

 <sect1 id="release-8-4-4">
  <title>Release 8.4.4</title>

  <note>
  <title>Release date</title>
  <simpara>2010-05-17</simpara>
  </note>

  <para>
   This release contains a variety of fixes from 8.4.3.
   For information about new features in the 8.4 major release, see
   <xref linkend="release-8-4"/>.
  </para>

  <sect2>
   <title>Migration to Version 8.4.4</title>

   <para>
    A dump/restore is not required for those running 8.4.X.
    However, if you are upgrading from a version earlier than 8.4.2,
    see the release notes for 8.4.2.
   </para>

  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
     <para>
      Enforce restrictions in <literal>plperl</literal> using an opmask applied to
      the whole interpreter, instead of using <filename>Safe.pm</filename>
      (Tim Bunce, Andrew Dunstan)
     </para>

     <para>
      Recent developments have convinced us that <filename>Safe.pm</filename> is too
      insecure to rely on for making <literal>plperl</literal> trustable.  This
      change removes use of <filename>Safe.pm</filename> altogether, in favor of using
      a separate interpreter with an opcode mask that is always applied.
      Pleasant side effects of the change include that it is now possible to
      use Perl's <literal>strict</literal> pragma in a natural way in
      <literal>plperl</literal>, and that Perl's <literal>$a</literal> and <literal>$b</literal>
      variables work as expected in sort routines, and that function
      compilation is significantly faster.  (CVE-2010-1169)
     </para>
    </listitem>

    <listitem>
     <para>
      Prevent PL/Tcl from executing untrustworthy code from
      <structname>pltcl_modules</structname> (Tom)
     </para>

     <para>
      PL/Tcl's feature for autoloading Tcl code from a database table
      could be exploited for trojan-horse attacks, because there was no
      restriction on who could create or insert into that table.  This change
      disables the feature unless <structname>pltcl_modules</structname> is owned by a
      superuser.  (However, the permissions on the table are not checked, so
      installations that really need a less-than-secure modules table can
      still grant suitable privileges to trusted non-superusers.)  Also,
      prevent loading code into the unrestricted <quote>normal</quote> Tcl
      interpreter unless we are really going to execute a <literal>pltclu</literal>
      function.  (CVE-2010-1170)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix data corruption during WAL replay of
      <literal>ALTER ... SET TABLESPACE</literal> (Tom)
     </para>

     <para>
      When <varname>archive_mode</varname> is on, <literal>ALTER ... SET TABLESPACE</literal>
      generates a WAL record whose replay logic was incorrect.  It could write
      the data to the wrong place, leading to possibly-unrecoverable data
      corruption.  Data corruption would be observed on standby slaves, and
      could occur on the master as well if a database crash and recovery
      occurred after committing the <literal>ALTER</literal> and before the next
      checkpoint.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible crash if a cache reset message is received during
      rebuild of a relcache entry (Heikki)
     </para>

     <para>
      This error was introduced in 8.4.3 while fixing a related failure.
     </para>
    </listitem>

    <listitem>
     <para>
      Apply per-function GUC settings while running the language validator
      for the function (Itagaki Takahiro)
     </para>

     <para>
      This avoids failures if the function's code is invalid without the
      setting; an example is that SQL functions may not parse if the
      <varname>search_path</varname> is not correct.
     </para>
    </listitem>

    <listitem>
     <para>
      Do constraint exclusion for inherited <command>UPDATE</command> and
      <command>DELETE</command> target tables when
      <varname>constraint_exclusion</varname> = <literal>partition</literal> (Tom)
     </para>

     <para>
      Due to an oversight, this setting previously only caused constraint
      exclusion to be checked in <command>SELECT</command> commands.
     </para>
    </listitem>

    <listitem>
     <para>
      Do not allow an unprivileged user to reset superuser-only parameter
      settings (Alvaro)
     </para>

     <para>
      Previously, if an unprivileged user ran <literal>ALTER USER ... RESET
      ALL</literal> for himself, or <literal>ALTER DATABASE ... RESET ALL</literal> for
      a database he owns, this would remove all special parameter settings
      for the user or database, even ones that are only supposed to be
      changeable by a superuser.  Now, the <command>ALTER</command> will only
      remove the parameters that the user has permission to change.
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid possible crash during backend shutdown if shutdown occurs
      when a <literal>CONTEXT</literal> addition would be made to log entries (Tom)
     </para>

     <para>
      In some cases the context-printing function would fail because the
      current transaction had already been rolled back when it came time
      to print a log message.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix erroneous handling of <literal>%r</literal> parameter in
      <varname>recovery_end_command</varname> (Heikki)
     </para>

     <para>
      The value always came out zero.
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure the archiver process responds to changes in
      <varname>archive_command</varname> as soon as possible (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix pl/pgsql's <literal>CASE</literal> statement to not fail when the
      case expression is a query that returns no rows (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Update pl/perl's <filename>ppport.h</filename> for modern Perl versions
      (Andrew)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix assorted memory leaks in pl/python (Andreas Freund, Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Handle empty-string connect parameters properly in ecpg (Michael)
     </para>
    </listitem>

    <listitem>
     <para>
      Prevent infinite recursion in <application>psql</application> when expanding
      a variable that refers to itself (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <application>psql</application>'s <literal>\copy</literal> to not add spaces around
      a dot within <literal>\copy (select ...)</literal> (Tom)
     </para>

     <para>
      Addition of spaces around the decimal point in a numeric literal would
      result in a syntax error.
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid formatting failure in <application>psql</application> when running in a
      locale context that doesn't match the <varname>client_encoding</varname>
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix unnecessary <quote>gin indexes do not support whole-index scans</quote>
      errors for unsatisfiable queries using <filename>contrib/intarray</filename>
      operators (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure that <filename>contrib/pgstattuple</filename> functions respond to cancel
      interrupts promptly (Tatsuhito Kasahara)
     </para>
    </listitem>

    <listitem>
     <para>
      Make server startup deal properly with the case that
      <function>shmget()</function> returns <literal>EINVAL</literal> for an existing
      shared memory segment (Tom)
     </para>

     <para>
      This behavior has been observed on BSD-derived kernels including OS X.
      It resulted in an entirely-misleading startup failure complaining that
      the shared memory request size was too large.
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid possible crashes in syslogger process on Windows (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Deal more robustly with incomplete time zone information in the
      Windows registry (Magnus)
     </para>
    </listitem>

    <listitem>
     <para>
      Update the set of known Windows time zone names (Magnus)
     </para>
    </listitem>

    <listitem>
     <para>
      Update time zone data files to <application>tzdata</application> release 2010j
      for DST law changes in Argentina, Australian Antarctic, Bangladesh,
      Mexico, Morocco, Pakistan, Palestine, Russia, Syria, Tunisia;
      also historical corrections for Taiwan.
     </para>

     <para>
      Also, add <literal>PKST</literal> (Pakistan Summer Time) to the default set of
      timezone abbreviations.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-4-3">
  <title>Release 8.4.3</title>

  <note>
  <title>Release date</title>
  <simpara>2010-03-15</simpara>
  </note>

  <para>
   This release contains a variety of fixes from 8.4.2.
   For information about new features in the 8.4 major release, see
   <xref linkend="release-8-4"/>.
  </para>

  <sect2>
   <title>Migration to Version 8.4.3</title>

   <para>
    A dump/restore is not required for those running 8.4.X.
    However, if you are upgrading from a version earlier than 8.4.2,
    see the release notes for 8.4.2.
   </para>

  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
     <para>
      Add new configuration parameter <varname>ssl_renegotiation_limit</varname> to
      control how often we do session key renegotiation for an SSL connection
      (Magnus)
     </para>

     <para>
      This can be set to zero to disable renegotiation completely, which may
      be required if a broken SSL library is used.  In particular, some
      vendors are shipping stopgap patches for CVE-2009-3555 that cause
      renegotiation attempts to fail.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible deadlock during backend startup (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible crashes due to not handling errors during relcache reload
      cleanly (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible crash due to use of dangling pointer to a cached plan
      (Tatsuo)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible crash due to overenthusiastic invalidation of cached
      plan for <command>ROLLBACK</command> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible crashes when trying to recover from a failure in
      subtransaction start (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix server memory leak associated with use of savepoints and a client
      encoding different from server's encoding (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix incorrect WAL data emitted during end-of-recovery cleanup of a GIST
      index page split (Yoichi Hirai)
     </para>

     <para>
      This would result in index corruption, or even more likely an error
      during WAL replay, if we were unlucky enough to crash during
      end-of-recovery cleanup after having completed an incomplete GIST
      insertion.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix bug in WAL redo cleanup method for gin indexes (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix incorrect comparison of scan key in gin index search (Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
      Make <function>substring()</function> for <type>bit</type> types treat any negative
      length as meaning <quote>all the rest of the string</quote> (Tom)
     </para>

     <para>
      The previous coding treated only -1 that way, and would produce an
      invalid result value for other negative values, possibly leading to
      a crash (CVE-2010-0442).
     </para>
    </listitem>

    <listitem>
     <para>
      Fix integer-to-bit-string conversions to handle the first fractional
      byte correctly when the output bit width is wider than the given
      integer by something other than a multiple of 8 bits (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix some cases of pathologically slow regular expression matching (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix bug occurring when trying to inline a SQL function that returns
      a set of a composite type that contains dropped columns (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix bug with trying to update a field of an element of a
      composite-type array column (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid failure when <command>EXPLAIN</command> has to print a FieldStore or
      assignment ArrayRef expression (Tom)
     </para>

     <para>
      These cases can arise now that <command>EXPLAIN VERBOSE</command> tries to
      print plan node target lists.
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid an unnecessary coercion failure in some cases where an undecorated
      literal string appears in a subquery within
      <command>UNION</command>/<command>INTERSECT</command>/<command>EXCEPT</command> (Tom)
     </para>

     <para>
      This fixes a regression for some cases that worked before 8.4.
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid undesirable rowtype compatibility check failures in some cases
      where a whole-row Var has a rowtype that contains dropped columns (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix the <literal>STOP WAL LOCATION</literal> entry in backup history files to
      report the next WAL segment's name when the end location is exactly at a
      segment boundary (Itagaki Takahiro)
     </para>
    </listitem>

    <listitem>
     <para>
      Always pass the catalog ID to an option validator function specified in
      <command>CREATE FOREIGN DATA WRAPPER</command> (Martin Pihlak)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix some more cases of temporary-file leakage (Heikki)
     </para>

     <para>
      This corrects a problem introduced in the previous minor release.
      One case that failed is when a plpgsql function returning set is
      called within another function's exception handler.
     </para>
    </listitem>

    <listitem>
     <para>
      Add support for doing <literal>FULL JOIN ON FALSE</literal> (Tom)
     </para>

     <para>
      This prevents a regression from pre-8.4 releases for some queries that
      can now be simplified to a constant-false join condition.
     </para>
    </listitem>

    <listitem>
     <para>
      Improve constraint exclusion processing of boolean-variable cases,
      in particular make it possible to exclude a partition that has a
      <quote>bool_column = false</quote> constraint (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Prevent treating an <literal>INOUT</literal> cast as representing binary
      compatibility (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Include column name in the message when warning about inability to
      grant or revoke column-level privileges (Stephen Frost)
     </para>

     <para>
      This is more useful than before and helps to prevent confusion when
      a <command>REVOKE</command> generates multiple messages, which formerly
      appeared to be duplicates.
     </para>
    </listitem>

    <listitem>
     <para>
      When reading <filename>pg_hba.conf</filename> and related files, do not treat
      <literal>@something</literal> as a file inclusion request if the <literal>@</literal>
      appears inside quote marks; also, never treat <literal>@</literal> by itself
      as a file inclusion request (Tom)
     </para>

     <para>
      This prevents erratic behavior if a role or database name starts with
      <literal>@</literal>.  If you need to include a file whose path name
      contains spaces, you can still do so, but you must write
      <literal>@"/path to/file"</literal> rather than putting the quotes around
      the whole construct.
     </para>
    </listitem>

    <listitem>
     <para>
      Prevent infinite loop on some platforms if a directory is named as
      an inclusion target in <filename>pg_hba.conf</filename> and related files
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible infinite loop if <function>SSL_read</function> or
      <function>SSL_write</function> fails without setting <varname>errno</varname> (Tom)
     </para>

     <para>
      This is reportedly possible with some Windows versions of
      <application>openssl</application>.
     </para>
    </listitem>

    <listitem>
     <para>
      Disallow <acronym>GSSAPI</acronym> authentication on local connections,
      since it requires a hostname to function correctly (Magnus)
     </para>
    </listitem>

    <listitem>
     <para>
      Protect <application>ecpg</application> against applications freeing strings
      unexpectedly (Michael)
     </para>
    </listitem>

    <listitem>
     <para>
      Make <application>ecpg</application> report the proper SQLSTATE if the connection
      disappears (Michael)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix translation of cell contents in <application>psql</application> <literal>\d</literal>
      output (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <application>psql</application>'s <literal>numericlocale</literal> option to not
      format strings it shouldn't in latex and troff output formats (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix a small per-query memory leak in <application>psql</application> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Make <application>psql</application> return the correct exit status (3) when
      <literal>ON_ERROR_STOP</literal> and <literal>--single-transaction</literal> are
      both specified and an error occurs during the implied <command>COMMIT</command>
      (Bruce)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <application>pg_dump</application>'s output of permissions for foreign servers
      (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible crash in parallel <application>pg_restore</application> due to
      out-of-range dependency IDs (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix plpgsql failure in one case where a composite column is set to NULL
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible failure when calling PL/Perl functions from PL/PerlU
      or vice versa (Tim Bunce)
     </para>
    </listitem>

    <listitem>
     <para>
      Add <literal>volatile</literal> markings in PL/Python to avoid possible
      compiler-specific misbehavior (Zdenek Kotala)
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure PL/Tcl initializes the Tcl interpreter fully (Tom)
     </para>

     <para>
      The only known symptom of this oversight is that the Tcl
      <literal>clock</literal> command misbehaves if using Tcl 8.5 or later.
     </para>
    </listitem>

    <listitem>
     <para>
      Prevent <function>ExecutorEnd</function> from being run on portals created
      within a failed transaction or subtransaction (Tom)
     </para>

     <para>
      This is known to cause issues when using
      <filename>contrib/auto_explain</filename>.
     </para>
    </listitem>

    <listitem>
     <para>
      Prevent crash in <filename>contrib/dblink</filename> when too many key
      columns are specified to a <function>dblink_build_sql_*</function> function
      (Rushabh Lathia, Joe Conway)
     </para>
    </listitem>

    <listitem>
     <para>
      Allow zero-dimensional arrays in <filename>contrib/ltree</filename> operations
      (Tom)
     </para>

     <para>
      This case was formerly rejected as an error, but it's more convenient to
      treat it the same as a zero-element array.  In particular this avoids
      unnecessary failures when an <type>ltree</type> operation is applied to the
      result of <literal>ARRAY(SELECT ...)</literal> and the sub-select returns no
      rows.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix assorted crashes in <filename>contrib/xml2</filename> caused by sloppy
      memory management (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Make building of <filename>contrib/xml2</filename> more robust on Windows
      (Andrew)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix race condition in Windows signal handling (Radu Ilie)
     </para>

     <para>
      One known symptom of this bug is that rows in <structname>pg_listener</structname>
      could be dropped under heavy load.
     </para>
    </listitem>

    <listitem>
     <para>
      Make the configure script report failure if the C compiler does
      not provide a working 64-bit integer datatype (Tom)
     </para>

     <para>
      This case has been broken for some time, and no longer seems worth
      supporting, so just reject it at configure time instead.
     </para>
    </listitem>

    <listitem>
     <para>
      Update time zone data files to <application>tzdata</application> release 2010e
      for DST law changes in Bangladesh, Chile, Fiji, Mexico, Paraguay, Samoa.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-4-2">
  <title>Release 8.4.2</title>

  <note>
  <title>Release date</title>
  <simpara>2009-12-14</simpara>
  </note>

  <para>
   This release contains a variety of fixes from 8.4.1.
   For information about new features in the 8.4 major release, see
   <xref linkend="release-8-4"/>.
  </para>

  <sect2>
   <title>Migration to Version 8.4.2</title>

   <para>
    A dump/restore is not required for those running 8.4.X.
    However, if you have any hash indexes,
    you should <command>REINDEX</command> them after updating to 8.4.2,
    to repair possible damage.
   </para>

  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
     <para>
      Protect against indirect security threats caused by index functions
      changing session-local state (Gurjeet Singh, Tom)
     </para>

     <para>
      This change prevents allegedly-immutable index functions from possibly
      subverting a superuser's session (CVE-2009-4136).
     </para>
    </listitem>

    <listitem>
     <para>
      Reject SSL certificates containing an embedded null byte in the common
      name (CN) field (Magnus)
     </para>

     <para>
      This prevents unintended matching of a certificate to a server or client
      name during SSL validation (CVE-2009-4034).
     </para>
    </listitem>

    <listitem>
     <para>
      Fix hash index corruption (Tom)
     </para>

     <para>
      The 8.4 change that made hash indexes keep entries sorted by hash value
      failed to update the bucket splitting and compaction routines to
      preserve the ordering.  So application of either of those operations
      could lead to permanent corruption of an index, in the sense that
      searches might fail to find entries that are present.  To deal with
      this, it is recommended to <literal>REINDEX</literal> any hash indexes you may
      have after installing this update.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible crash during backend-startup-time cache initialization (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid crash on empty thesaurus dictionary (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Prevent signals from interrupting <literal>VACUUM</literal> at unsafe times
      (Alvaro)
     </para>

     <para>
      This fix prevents a PANIC if a <literal>VACUUM FULL</literal> is cancelled
      after it's already committed its tuple movements, as well as transient
      errors if a plain <literal>VACUUM</literal> is interrupted after having
      truncated the table.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible crash due to integer overflow in hash table size
      calculation (Tom)
     </para>

     <para>
      This could occur with extremely large planner estimates for the size of
      a hashjoin's result.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix crash if a <literal>DROP</literal> is attempted on an internally-dependent
      object (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix very rare crash in <type>inet</type>/<type>cidr</type> comparisons (Chris
      Mikkelson)
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure that shared tuple-level locks held by prepared transactions are
      not ignored (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix premature drop of temporary files used for a cursor that is accessed
      within a subtransaction (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix memory leak in syslogger process when rotating to a new CSV logfile
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix memory leak in postmaster when re-parsing <filename>pg_hba.conf</filename>
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix Windows permission-downgrade logic (Jesse Morris)
     </para>

     <para>
      This fixes some cases where the database failed to start on Windows,
      often with misleading error messages such as <quote>could not locate
      matching postgres executable</quote>.
     </para>
    </listitem>

    <listitem>
     <para>
      Make <literal>FOR UPDATE/SHARE</literal> in the primary query not propagate
      into <literal>WITH</literal> queries (Tom)
     </para>

     <para>
      For example, in
<programlisting>
WITH w AS (SELECT * FROM foo) SELECT * FROM w, bar ... FOR UPDATE
</programlisting>
      the <literal>FOR UPDATE</literal> will now affect <literal>bar</literal> but not
      <literal>foo</literal>.  This is more useful and consistent than the original
      8.4 behavior, which tried to propagate <literal>FOR UPDATE</literal> into the
      <literal>WITH</literal> query but always failed due to assorted implementation
      restrictions.  It also follows the design rule that <literal>WITH</literal>
      queries are executed as if independent of the main query.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix bug with a <literal>WITH RECURSIVE</literal> query immediately inside
      another one (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix concurrency bug in hash indexes (Tom)
     </para>

     <para>
      Concurrent insertions could cause index scans to transiently report
      wrong results.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix incorrect logic for gist index page splits, when the split depends
      on a non-first column of the index (Paul Ramsey)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix wrong search results for a multi-column gin index with
      <literal>fastupdate</literal> enabled (Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix bugs in WAL entry creation for gin indexes (Tom)
     </para>

     <para>
      These bugs were masked when <varname>full_page_writes</varname> was on, but
      with it off a WAL replay failure was certain if a crash occurred before
      the next checkpoint.
     </para>
    </listitem>

    <listitem>
     <para>
      Don't error out if recycling or removing an old WAL file fails at the
      end of checkpoint (Heikki)
     </para>

     <para>
      It's better to treat the problem as non-fatal and allow the checkpoint
      to complete.  Future checkpoints will retry the removal.  Such problems
      are not expected in normal operation, but have been seen to be
      caused by misdesigned Windows anti-virus and backup software.
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure WAL files aren't repeatedly archived on Windows (Heikki)
     </para>

     <para>
      This is another symptom that could happen if some other process
      interfered with deletion of a no-longer-needed file.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix PAM password processing to be more robust (Tom)
     </para>

     <para>
      The previous code is known to fail with the combination of the Linux
      <literal>pam_krb5</literal> PAM module with Microsoft Active Directory as the
      domain controller.  It might have problems elsewhere too, since it was
      making unjustified assumptions about what arguments the PAM stack would
      pass to it.
     </para>
    </listitem>

    <listitem>
     <para>
      Raise the maximum authentication token (Kerberos ticket) size in GSSAPI
      and SSPI authentication methods (Ian Turner)
     </para>

     <para>
      While the old 2000-byte limit was more than enough for Unix Kerberos
      implementations, tickets issued by Windows Domain Controllers can be
      much larger.
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure that domain constraints are enforced in constructs like
      <literal>ARRAY[...]::domain</literal>, where the domain is over an array type
      (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix foreign-key logic for some cases involving composite-type columns
      as foreign keys (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure that a cursor's snapshot is not modified after it is created
      (Alvaro)
     </para>

     <para>
      This could lead to a cursor delivering wrong results if later operations
      in the same transaction modify the data the cursor is supposed to return.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <literal>CREATE TABLE</literal> to properly merge default expressions
      coming from different inheritance parent tables (Tom)
     </para>

     <para>
      This used to work but was broken in 8.4.
     </para>
    </listitem>

    <listitem>
     <para>
      Re-enable collection of access statistics for sequences (Akira Kurosawa)
     </para>

     <para>
      This used to work but was broken in 8.3.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix processing of ownership dependencies during <literal>CREATE OR
      REPLACE FUNCTION</literal> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix incorrect handling of <literal>WHERE</literal>
      <replaceable>x</replaceable>=<replaceable>x</replaceable> conditions (Tom)
     </para>

     <para>
      In some cases these could get ignored as redundant, but they aren't
      &mdash; they're equivalent to <replaceable>x</replaceable> <literal>IS NOT NULL</literal>.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix incorrect plan construction when using hash aggregation to implement
      <literal>DISTINCT</literal> for textually identical volatile expressions (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix Assert failure for a volatile <literal>SELECT DISTINCT ON</literal>
      expression (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <function>ts_stat()</function> to not fail on an empty <type>tsvector</type>
      value (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Make text search parser accept underscores in XML attributes (Peter)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix encoding handling in <type>xml</type> binary input (Heikki)
     </para>

     <para>
      If the XML header doesn't specify an encoding, we now assume UTF-8 by
      default; the previous handling was inconsistent.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix bug with calling <literal>plperl</literal> from <literal>plperlu</literal> or vice
      versa (Tom)
     </para>

     <para>
      An error exit from the inner function could result in crashes due to
      failure to re-select the correct Perl interpreter for the outer function.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix session-lifespan memory leak when a PL/Perl function is redefined
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure that Perl arrays are properly converted to
      <productname>PostgreSQL</productname> arrays when returned by a set-returning
      PL/Perl function (Andrew Dunstan, Abhijit Menon-Sen)
     </para>

     <para>
      This worked correctly already for non-set-returning functions.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix rare crash in exception processing in PL/Python (Peter)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <application>ecpg</application> problem with comments in <literal>DECLARE
      CURSOR</literal> statements (Michael)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <application>ecpg</application> to not treat recently-added keywords as
      reserved words (Tom)
     </para>

     <para>
      This affected the keywords <literal>CALLED</literal>, <literal>CATALOG</literal>,
      <literal>DEFINER</literal>, <literal>ENUM</literal>, <literal>FOLLOWING</literal>,
      <literal>INVOKER</literal>, <literal>OPTIONS</literal>, <literal>PARTITION</literal>,
      <literal>PRECEDING</literal>, <literal>RANGE</literal>, <literal>SECURITY</literal>,
      <literal>SERVER</literal>, <literal>UNBOUNDED</literal>, and <literal>WRAPPER</literal>.
     </para>
    </listitem>

    <listitem>
     <para>
      Re-allow regular expression special characters in <application>psql</application>'s
      <literal>\df</literal> function name parameter (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      In <filename>contrib/fuzzystrmatch</filename>, correct the calculation of
      <function>levenshtein</function> distances with non-default costs (Marcin Mank)
     </para>
    </listitem>

    <listitem>
     <para>
      In <filename>contrib/pg_standby</filename>, disable triggering failover with a
      signal on Windows (Fujii Masao)
     </para>

     <para>
      This never did anything useful, because Windows doesn't have Unix-style
      signals, but recent changes made it actually crash.
     </para>
    </listitem>

    <listitem>
     <para>
      Put <literal>FREEZE</literal> and <literal>VERBOSE</literal> options in the right
      order in the <literal>VACUUM</literal> command that
      <filename>contrib/vacuumdb</filename> produces (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible leak of connections when <filename>contrib/dblink</filename>
      encounters an error (Tatsuhito Kasahara)
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure <application>psql</application>'s flex module is compiled with the correct
      system header definitions (Tom)
     </para>

     <para>
      This fixes build failures on platforms where
      <literal>--enable-largefile</literal> causes incompatible changes in the
      generated code.
     </para>
    </listitem>

    <listitem>
     <para>
      Make the postmaster ignore any <literal>application_name</literal> parameter in
      connection request packets, to improve compatibility with future libpq
      versions (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Update the timezone abbreviation files to match current reality (Joachim
      Wieland)
     </para>

     <para>
      This includes adding <literal>IDT</literal> to the default
      timezone abbreviation set.
     </para>
    </listitem>

    <listitem>
     <para>
      Update time zone data files to <application>tzdata</application> release 2009s
      for DST law changes in Antarctica, Argentina, Bangladesh, Fiji,
      Novokuznetsk, Pakistan, Palestine, Samoa, Syria; also historical
      corrections for Hong Kong.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-4-1">
  <title>Release 8.4.1</title>

  <note>
  <title>Release date</title>
  <simpara>2009-09-09</simpara>
  </note>

  <para>
   This release contains a variety of fixes from 8.4.
   For information about new features in the 8.4 major release, see
   <xref linkend="release-8-4"/>.
  </para>

  <sect2>
   <title>Migration to Version 8.4.1</title>

   <para>
    A dump/restore is not required for those running 8.4.X.
   </para>

  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
     <para>
      Fix WAL page header initialization at the end of archive recovery
      (Heikki)
     </para>

     <para>
      This could lead to failure to process the WAL in a subsequent
      archive recovery.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <quote>cannot make new WAL entries during recovery</quote> error (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix problem that could make expired rows visible after a crash (Tom)
     </para>

     <para>
      This bug involved a page status bit potentially not being set
      correctly after a server crash.
     </para>
    </listitem>

    <listitem>
     <para>
      Disallow <command>RESET ROLE</command> and <command>RESET SESSION
      AUTHORIZATION</command> inside security-definer functions (Tom, Heikki)
     </para>

     <para>
      This covers a case that was missed in the previous patch that
      disallowed <command>SET ROLE</command> and <command>SET SESSION
      AUTHORIZATION</command> inside security-definer functions.
      (See CVE-2007-6600)
     </para>
    </listitem>

    <listitem>
     <para>
      Make <command>LOAD</command> of an already-loaded loadable module
      into a no-op (Tom)
     </para>

     <para>
      Formerly, <command>LOAD</command> would attempt to unload and re-load the
      module, but this is unsafe and not all that useful.
     </para>
    </listitem>

    <listitem>
     <para>
      Make window function <literal>PARTITION BY</literal> and <literal>ORDER BY</literal>
      items always be interpreted as simple expressions (Tom)
     </para>

     <para>
      In 8.4.0 these lists were parsed following the rules used for
      top-level <literal>GROUP BY</literal> and <literal>ORDER BY</literal> lists.
      But this was not correct per the SQL standard, and it led to possible
      circularity.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix several errors in planning of semi-joins (Tom)
     </para>

     <para>
      These led to wrong query results in some cases where <literal>IN</literal>
      or <literal>EXISTS</literal> was used together with another join.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix handling of whole-row references to subqueries that are within
      an outer join (Tom)
     </para>

     <para>
      An example is
      <literal>SELECT COUNT(ss.*) FROM ... LEFT JOIN (SELECT ...) ss ON ...</literal>.
      Here, <literal>ss.*</literal> would be treated as <literal>ROW(NULL,NULL,...)</literal>
      for null-extended join rows, which is not the same as a simple NULL.
      Now it is treated as a simple NULL.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix Windows shared-memory allocation code (Tsutomu Yamada, Magnus)
     </para>

     <para>
      This bug led to the often-reported <quote>could not reattach
      to shared memory</quote> error message.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix locale handling with plperl (Heikki)
     </para>

     <para>
      This bug could cause the server's locale setting to change when a
      plperl function is called, leading to data corruption.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix handling of reloptions to ensure setting one option doesn't
      force default values for others (Itagaki Takahiro)
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure that a <quote>fast shutdown</quote> request will forcibly terminate
      open sessions, even if a <quote>smart shutdown</quote> was already in progress
      (Fujii Masao)
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid memory leak for <function>array_agg()</function> in <literal>GROUP BY</literal>
      queries (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Treat <function>to_char(..., 'TH')</function> as an uppercase ordinal
      suffix with <literal>'HH'</literal>/<literal>'HH12'</literal> (Heikki)
     </para>

     <para>
      It was previously handled as <literal>'th'</literal> (lowercase).
     </para>
    </listitem>

    <listitem>
     <para>
      Include the fractional part in the result of
      <function>EXTRACT(second)</function> and
      <function>EXTRACT(milliseconds)</function> for
      <type>time</type> and <type>time with time zone</type> inputs (Tom)
     </para>

     <para>
      This has always worked for floating-point datetime configurations,
      but was broken in the integer datetime code.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix overflow for <literal>INTERVAL '<replaceable>x</replaceable> ms'</literal>
      when <replaceable>x</replaceable> is more than 2 million and integer
      datetimes are in use (Alex Hunsaker)
     </para>
    </listitem>

    <listitem>
     <para>
      Improve performance when processing toasted values in index scans (Tom)
     </para>

     <para>
      This is particularly useful for <ulink
      url="http://postgis.refractions.net/">PostGIS</ulink>.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix a typo that disabled <varname>commit_delay</varname> (Jeff Janes)
     </para>
    </listitem>

    <listitem>
     <para>
      Output early-startup messages to <filename>postmaster.log</filename> if the
      server is started in silent mode (Tom)
     </para>

     <para>
      Previously such error messages were discarded, leading to
      difficulty in debugging.
     </para>
    </listitem>

    <listitem>
     <para>
      Remove translated FAQs (Peter)
     </para>

     <para>
      They are now on the <ulink
      url="http://wiki.postgresql.org/wiki/FAQ">wiki</ulink>.  The
      main FAQ was moved to the wiki some time ago.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <application>pg_ctl</application> to not go into an infinite loop if
      <filename>postgresql.conf</filename> is empty (Jeff Davis)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix several errors in <application>pg_dump</application>'s
      <literal>--binary-upgrade</literal> mode (Bruce, Tom)
     </para>

     <para>
      <literal>pg_dump --binary-upgrade</literal> is used by pg_migrator.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <filename>contrib/xml2</filename>'s <function>xslt_process()</function> to
      properly handle the maximum number of parameters (twenty) (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Improve robustness of <application>libpq</application>'s code to recover
      from errors during <command>COPY FROM STDIN</command> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid including conflicting readline and editline header files
      when both libraries are installed (Zdenek Kotala)
     </para>
    </listitem>

    <listitem>
     <para>
      Work around gcc bug that causes <quote>floating-point exception</quote>
      instead of <quote>division by zero</quote> on some platforms (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Update time zone data files to <application>tzdata</application> release 2009l
      for DST law changes in Bangladesh, Egypt, Mauritius.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-4">
  <title>Release 8.4</title>

  <note>
   <title>Release date</title>
   <simpara>2009-07-01</simpara>
  </note>

  <sect2>
   <title>Overview</title>

   <para>
    After many years of development, <productname>PostgreSQL</productname> has
    become feature-complete in many areas.   This release shows a
    targeted approach to adding features (e.g., authentication,
    monitoring, space reuse), and adds capabilities defined in the
    later SQL standards.  The major areas of enhancement are:
   </para>

   <itemizedlist>

    <!-- This list duplicates items below, but without authors or details-->

    <listitem>
     <para>
      Windowing Functions
     </para>
    </listitem>

    <listitem>
     <para>
      Common Table Expressions and Recursive Queries
     </para>
    </listitem>

    <listitem>
     <para>
      Default and variadic parameters for functions
     </para>
    </listitem>

    <listitem>
     <para>
      Parallel Restore
     </para>
    </listitem>

    <listitem>
     <para>
      Column Permissions
     </para>
    </listitem>

    <listitem>
     <para>
      Per-database locale settings
     </para>
    </listitem>

    <listitem>
     <para>
      Improved hash indexes
     </para>
    </listitem>

    <listitem>
     <para>
      Improved join performance for <literal>EXISTS</literal> and <literal>NOT EXISTS</literal> queries
     </para>
    </listitem>

    <listitem>
     <para>
      Easier-to-use Warm Standby
     </para>
    </listitem>

    <listitem>
     <para>
      Automatic sizing of the Free Space Map
     </para>
    </listitem>

    <listitem>
     <para>
      Visibility Map (greatly reduces vacuum overhead for slowly-changing tables)
     </para>
    </listitem>

    <listitem>
     <para>
      Version-aware psql (backslash commands work against older servers)
     </para>
    </listitem>

    <listitem>
     <para>
      Support SSL certificates for user authentication
     </para>
    </listitem>

    <listitem>
     <para>
      Per-function runtime statistics
     </para>
    </listitem>

    <listitem>
     <para>
      Easy editing of functions in psql
     </para>
    </listitem>

    <listitem>
     <para>
      New contrib modules: pg_stat_statements, auto_explain, citext, btree_gin
     </para>
    </listitem>

   </itemizedlist>

   <para>
    The above items are explained in more detail in the sections below.
   </para>

  </sect2>

  <sect2>
   <title>Migration to Version 8.4</title>

   <para>
    A dump/restore using <application>pg_dump</application> is
    required for those wishing to migrate data from any previous
    release.
   </para>

   <para>
    Observe the following incompatibilities:
   </para>

   <sect3>
    <title>General</title>
    <itemizedlist>

     <listitem>
      <para>
       Use 64-bit integer datetimes by default (Neil Conway)
      </para>

      <para>
       Previously this was selected by <application>configure</application>'s
       <option>--enable-integer-datetimes</option> option.  To retain
       the old behavior, build with <option>--disable-integer-datetimes</option>.
      </para>
     </listitem>

     <listitem>
      <para>
       Remove <application>ipcclean</application> utility command (Bruce)
      </para>

      <para>
       The utility only worked on a few platforms.  Users should use
       their operating system tools instead.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Server Settings</title>
    <itemizedlist>

     <listitem>
      <para>
       Change default setting for
       <literal>log_min_messages</literal> to <literal>warning</literal> (previously
       it was <literal>notice</literal>) to reduce log file volume (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Change default setting for <literal>max_prepared_transactions</literal> to
       zero (previously it was 5) (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Make <literal>debug_print_parse</literal>, <literal>debug_print_rewritten</literal>,
       and <literal>debug_print_plan</literal>
       output appear at <literal>LOG</literal> message level, not
       <literal>DEBUG1</literal> as formerly (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Make <literal>debug_pretty_print</literal> default to <literal>on</literal> (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Remove <varname>explain_pretty_print</varname> parameter (no longer needed) (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Make <varname>log_temp_files</varname> settable by superusers only, like other
       logging options (Simon Riggs)
      </para>
     </listitem>

     <listitem>
      <para>
       Remove automatic appending of the epoch timestamp when no <literal>%</literal>
       escapes are present in <literal>log_filename</literal> (Robert Haas)
      </para>

      <para>
       This change was made because some users wanted a fixed log filename,
       for use with an external log rotation tool.
      </para>
     </listitem>

     <listitem>
      <para>
       Remove <varname>log_restartpoints</varname> from <filename>recovery.conf</filename>;
       instead use <varname>log_checkpoints</varname> (Simon)
      </para>
     </listitem>

     <listitem>
      <para>
       Remove <varname>krb_realm</varname> and <varname>krb_server_hostname</varname>;
       these are now set in <filename>pg_hba.conf</filename> instead (Magnus)
      </para>
     </listitem>

     <listitem>
      <para>
       There are also significant changes in <link
       linkend="release-8-4-pg-hba-conf"><filename>pg_hba.conf</filename></link>,
       as described below.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Queries</title>

    <itemizedlist>

     <listitem>
      <para>
       Change <command>TRUNCATE</command> and <command>LOCK</command> to
       apply to child tables of the specified table(s) (Peter)
      </para>

      <para>
       These commands now accept an <literal>ONLY</literal> option that prevents
       processing child tables; this option must be used if the old
       behavior is needed.
      </para>
     </listitem>

     <listitem>
      <para>
       <command>SELECT DISTINCT</command> and
       <literal>UNION</literal>/<literal>INTERSECT</literal>/<literal>EXCEPT</literal>
       no longer always produce sorted output (Tom)
      </para>

      <para>
       Previously, these types of queries always removed duplicate rows
       by means of Sort/Unique processing (i.e., sort then remove adjacent
       duplicates).  Now they can be implemented by hashing, which will not
       produce sorted output.  If an application relied on the output being
       in sorted order, the recommended fix is to add an <literal>ORDER BY</literal>
       clause.  As a short-term workaround, the previous behavior can be
       restored by disabling <literal>enable_hashagg</literal>, but that is a very
       performance-expensive fix.  <literal>SELECT DISTINCT ON</literal> never uses
       hashing, however, so its behavior is unchanged.
      </para>
     </listitem>

     <listitem>
      <para>
       Force child tables to inherit <literal>CHECK</literal> constraints from parents
       (Alex Hunsaker, Nikhil Sontakke, Tom)
      </para>

      <para>
       Formerly it was possible to drop such a constraint from a child
       table, allowing rows that violate the constraint to be visible
       when scanning the parent table.  This was deemed inconsistent,
       as well as contrary to SQL standard.
      </para>
     </listitem>

     <listitem>
      <para>
       Disallow negative <literal>LIMIT</literal> or <literal>OFFSET</literal>
       values, rather than treating them as zero (Simon)
      </para>
     </listitem>

     <listitem>
      <para>
       Disallow <command>LOCK TABLE</command> outside a transaction block
       (Tom)
      </para>

      <para>
       Such an operation is useless because the lock would be released
       immediately.
      </para>
     </listitem>

     <listitem>
      <para>
       Sequences now contain an additional <structfield>start_value</structfield> column
       (Zoltan Boszormenyi)
      </para>

      <para>
       This supports <command>ALTER SEQUENCE ... RESTART</command>.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>


   <sect3>
    <title>Functions and Operators</title>

    <itemizedlist>

     <listitem>
      <para>
       Make <type>numeric</type> zero raised to a fractional power return
       <literal>0</literal>, rather than throwing an error, and make
       <type>numeric</type> zero raised to the zero power return <literal>1</literal>,
       rather than error (Bruce)
      </para>

      <para>
       This matches the longstanding <type>float8</type> behavior.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow unary minus of floating-point values to produce minus zero (Tom)
      </para>

      <para>
       The changed behavior is more <acronym>IEEE</acronym>-standard
       compliant.
      </para>
     </listitem>

     <listitem>
      <para>
       Throw an error if an escape character is the last character in
       a <literal>LIKE</literal> pattern (i.e., it has nothing to escape) (Tom)
      </para>

      <para>
       Previously, such an escape character was silently ignored,
       thus possibly masking application logic errors.
      </para>
     </listitem>

     <listitem>
      <para>
       Remove <literal>~=~</literal> and <literal>~&lt;&gt;~</literal> operators
       formerly used for <literal>LIKE</literal> index comparisons (Tom)
      </para>

      <para>
       Pattern indexes now use the regular equality operator.
      </para>
     </listitem>

     <listitem>
      <para>
       <function>xpath()</function> now passes its arguments to <application>libxml</application>
       without any changes (Andrew)
      </para>

      <para>
       This means that the XML argument must be a well-formed XML document.
       The previous coding attempted to allow XML fragments, but it did not
       work well.
      </para>
     </listitem>

     <listitem>
      <para>
       Make <function>xmlelement()</function> format attribute values just like
       content values (Peter)
      </para>

      <para>
       Previously, attribute values were formatted according to the
       normal SQL output behavior, which is sometimes at odds with
       XML rules.
      </para>
     </listitem>

     <listitem>
      <para>
       Rewrite memory management for <application>libxml</application>-using functions
       (Tom)
      </para>

      <para>
       This change should avoid some compatibility problems with use of
       <application>libxml</application> in PL/Perl and other add-on code.
      </para>
     </listitem>

     <listitem>
      <para>
       Adopt a faster algorithm for hash functions (Kenneth Marshall,
       based on work of Bob Jenkins)
      </para>

      <para>
       Many of the built-in hash functions now deliver different results on
       little-endian and big-endian platforms.
      </para>
     </listitem>

    </itemizedlist>

    <sect4>
     <title>Temporal Functions and Operators</title>

     <itemizedlist>

      <listitem>
       <para>
        <varname>DateStyle</varname> no longer controls <type>interval</type> output
        formatting; instead there is a new variable <varname>IntervalStyle</varname>
        (Ron Mayer)
       </para>
      </listitem>

      <listitem>
       <para>
        Improve consistency of handling of fractional seconds in
        <type>timestamp</type> and <type>interval</type> output (Ron Mayer)
       </para>

       <para>
        This may result in displaying a different number of fractional
        digits than before, or rounding instead of truncating.
       </para>
      </listitem>

      <listitem>
       <para>
        Make <function>to_char()</function>'s localized month/day names depend
        on <varname>LC_TIME</varname>, not <varname>LC_MESSAGES</varname> (Euler
        Taveira de Oliveira)
       </para>
      </listitem>

      <listitem>
       <para>
        Cause <function>to_date()</function> and <function>to_timestamp()</function>
        to more consistently report errors for invalid input (Brendan
        Jurd)
       </para>

       <para>
        Previous versions would often ignore or silently misread input
        that did not match the format string.  Such cases will now
        result in an error.
       </para>
      </listitem>

      <listitem>
       <para>
        Fix <function>to_timestamp()</function> to not require upper/lower case
        matching for meridian (<literal>AM</literal>/<literal>PM</literal>) and era
        (<literal>BC</literal>/<literal>AD</literal>) format designations  (Brendan
        Jurd)
       </para>

       <para>
        For example, input value <literal>ad</literal> now matches the format
        string <literal>AD</literal>.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

  </sect2>

  <sect2>
   <title>Changes</title>

   <para>
    Below you will find a detailed account of the changes between
    <productname>PostgreSQL</productname> 8.4 and the previous major
    release.
   </para>

   <sect3>
    <title>Performance</title>
    <itemizedlist>

     <listitem>
      <para>
       Improve optimizer statistics calculations (Jan Urbanski, Tom)
      </para>

      <para>
       In particular, estimates for full-text-search operators are
       greatly improved.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <command>SELECT DISTINCT</command> and
       <literal>UNION</literal>/<literal>INTERSECT</literal>/<literal>EXCEPT</literal> to
       use hashing (Tom)
      </para>

      <para>
       This means that these types of queries no longer automatically
       produce sorted output.
      </para>
     </listitem>

     <listitem>
      <para>
       Create explicit concepts of semi-joins and anti-joins (Tom)
      </para>

      <para>
       This work formalizes our previous ad-hoc treatment of <literal>IN
       (SELECT ...)</literal> clauses, and extends it to <literal>EXISTS</literal> and
       <literal>NOT EXISTS</literal> clauses.  It should result in significantly
       better planning of <literal>EXISTS</literal> and <literal>NOT EXISTS</literal>
       queries.  In general, logically equivalent <literal>IN</literal> and
       <literal>EXISTS</literal> clauses should now have similar performance,
       whereas previously <literal>IN</literal> often won.
      </para>
     </listitem>

     <listitem>
      <para>
       Improve optimization of sub-selects beneath outer joins (Tom)
      </para>

      <para>
       Formerly, a sub-select or view could not be optimized very well if it
       appeared within the nullable side of an outer join and contained
       non-strict expressions (for instance, constants) in its result list.
      </para>
     </listitem>

     <listitem>
      <para>
       Improve the performance of <function>text_position()</function> and
       related functions by using Boyer-Moore-Horspool searching (David
       Rowley)
      </para>

      <para>
       This is particularly helpful for long search patterns.
      </para>
     </listitem>

     <listitem>
      <para>
       Reduce I/O load of writing the statistics collection file
       by writing the file only when requested (Martin Pihlak)
      </para>
     </listitem>

     <listitem>
      <para>
       Improve performance for bulk inserts (Robert Haas, Simon)
      </para>
     </listitem>

     <listitem>
      <para>
       Increase the default value of <varname>default_statistics_target</varname>
       from <literal>10</literal> to <literal>100</literal> (Greg Sabino Mullane,
       Tom)
      </para>

      <para>
       The maximum value was also increased from <literal>1000</literal> to
       <literal>10000</literal>.
      </para>
     </listitem>

     <listitem>
      <para>
       Perform <varname>constraint_exclusion</varname> checking by default
       in queries involving inheritance or <literal>UNION ALL</literal> (Tom)
      </para>

      <para>
       A new <varname>constraint_exclusion</varname> setting,
       <literal>partition</literal>, was added to specify this behavior.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow I/O read-ahead for bitmap index scans (Greg Stark)
      </para>

      <para>
       The amount of read-ahead is controlled by
       <varname>effective_io_concurrency</varname>.  This feature is available only
       if the kernel has <function>posix_fadvise()</function> support.
      </para>
     </listitem>

     <listitem>
      <para>
       Inline simple set-returning <acronym>SQL</acronym> functions in
       <literal>FROM</literal> clauses (Richard Rowell)
      </para>
     </listitem>

     <listitem>
      <para>
       Improve performance of multi-batch hash joins by providing a special
       case for join key values that are especially common in the outer
       relation (Bryce Cutt, Ramon Lawrence)
      </para>
     </listitem>

     <listitem>
      <para>
       Reduce volume of temporary data in multi-batch hash joins
       by suppressing <quote>physical tlist</quote> optimization (Michael
       Henderson, Ramon Lawrence)
      </para>
     </listitem>

     <listitem>
      <para>
       Avoid waiting for idle-in-transaction sessions during
       <command>CREATE INDEX CONCURRENTLY</command> (Simon)
      </para>
     </listitem>

     <listitem>
      <para>
       Improve performance of shared cache invalidation (Tom)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Server</title>

    <sect4>
     <title>Settings</title>

     <itemizedlist>

      <listitem>
       <para>
        Convert many <filename>postgresql.conf</filename> settings to enumerated
        values so that <literal>pg_settings</literal> can display the valid
        values (Magnus)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <varname>cursor_tuple_fraction</varname> parameter to control the
        fraction of a cursor's rows that the planner assumes will be
        fetched (Robert Hell)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow underscores in the names of custom variable
        classes in <filename>postgresql.conf</filename> (Tom)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Authentication and security</title>
     <itemizedlist>

      <listitem>
       <para>
        Remove support for the (insecure) <literal>crypt</literal> authentication method
        (Magnus)
       </para>

       <para>
        This effectively obsoletes pre-<productname>PostgreSQL</productname> 7.2 client
        libraries, as there is no longer any non-plaintext password method that
        they can use.
       </para>
      </listitem>

      <listitem>
       <para>
        Support regular expressions in <filename>pg_ident.conf</filename>
        (Magnus)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow <productname>Kerberos</productname>/<acronym>GSSAPI</acronym> parameters
        to be changed without restarting the postmaster (Magnus)
       </para>
      </listitem>

      <listitem>
       <para>
        Support <acronym>SSL</acronym> certificate chains in server certificate
        file (Andrew Gierth)
       </para>

       <para>
        Including the full certificate chain makes the client able
        to verify the certificate without having all intermediate CA
        certificates present in the local store, which is often the case for
        commercial CAs.
       </para>
      </listitem>

      <listitem>
       <para>
        Report appropriate error message for combination of <literal>MD5</literal>
        authentication and <varname>db_user_namespace</varname> enabled (Bruce)
       </para>
      </listitem>
     </itemizedlist>

    </sect4>

    <sect4 id="release-8-4-pg-hba-conf">
     <title><filename>pg_hba.conf</filename></title>
     <itemizedlist>

      <listitem>
       <para>
        Change all authentication options to use <literal>name=value</literal>
        syntax (Magnus)
       </para>

       <para>
        This makes incompatible changes to the <literal>ldap</literal>,
        <literal>pam</literal> and <literal>ident</literal> authentication methods. All
        <filename>pg_hba.conf</filename> entries with these methods need to be
        rewritten using the new format.
       </para>
      </listitem>

      <listitem>
       <para>
        Remove the <literal>ident sameuser</literal> option, instead making that
        behavior the default if no usermap is specified (Magnus)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow a usermap parameter for all external authentication methods
        (Magnus)
       </para>

       <para>
        Previously a usermap was only supported for <literal>ident</literal>
        authentication.
       </para>
      </listitem>

      <listitem>
       <para>
        Add <literal>clientcert</literal> option to control requesting of a
        client certificate (Magnus)
       </para>

       <para>
        Previously this was controlled by the presence of a root
        certificate file in the server's data directory.
       </para>
      </listitem>

      <listitem>
       <para>
        Add <literal>cert</literal> authentication method to allow
        <emphasis>user</emphasis> authentication via <acronym>SSL</acronym> certificates
        (Magnus)
       </para>

       <para>
        Previously <acronym>SSL</acronym> certificates could only verify that
        the client had access to a certificate, not authenticate a
        user.
       </para>
      </listitem>

      <listitem>
       <para>
        Allow <literal>krb5</literal>, <literal>gssapi</literal> and <literal>sspi</literal>
        realm and <literal>krb5</literal> host settings to be specified in
        <filename>pg_hba.conf</filename> (Magnus)
       </para>

       <para>
        These override the settings in <filename>postgresql.conf</filename>.
       </para>
      </listitem>

      <listitem>
       <para>
        Add <varname>include_realm</varname> parameter for <literal>krb5</literal>,
        <literal>gssapi</literal>, and <literal>sspi</literal> methods (Magnus)
       </para>

       <para>
        This allows identical usernames from different realms to be
        authenticated as different database users using usermaps.
       </para>
      </listitem>

      <listitem>
       <para>
        Parse <filename>pg_hba.conf</filename> fully when it is loaded,
        so that errors are reported immediately (Magnus)
       </para>

       <para>
        Previously, most errors in the file wouldn't be detected until clients
        tried to connect, so an erroneous file could render the system
        unusable.  With the new behavior, if an error is detected during
        reload then the bad file is rejected and the postmaster continues
        to use its old copy.
       </para>
      </listitem>

      <listitem>
       <para>
        Show all parsing errors in <filename>pg_hba.conf</filename> instead of
        aborting after the first one (Selena Deckelmann)
       </para>
      </listitem>

      <listitem>
       <para>
        Support <literal>ident</literal> authentication over Unix-domain sockets
        on <productname>Solaris</productname> (Garick Hamlin)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Continuous Archiving</title>
     <itemizedlist>

      <listitem>
       <para>
        Provide an option to <function>pg_start_backup()</function> to force its
        implied checkpoint to finish as quickly as possible (Tom)
       </para>

       <para>
        The default behavior avoids excess I/O consumption, but that is
        pointless if no concurrent query activity is going on.
       </para>
      </listitem>

      <listitem>
       <para>
        Make <function>pg_stop_backup()</function> wait for modified <acronym>WAL</acronym>
        files to be archived (Simon)
       </para>

       <para>
        This guarantees that the backup is valid at the time
        <function>pg_stop_backup()</function> completes.
       </para>
      </listitem>

      <listitem>
       <para>
        When archiving is enabled, rotate the last WAL segment at shutdown
        so that all transactions can be archived immediately
        (Guillaume Smet, Heikki)
       </para>
      </listitem>

      <listitem>
       <para>
        Delay <quote>smart</quote> shutdown while a continuous archiving base backup
        is in progress (Laurenz Albe)
       </para>
      </listitem>

      <listitem>
       <para>
        Cancel a continuous archiving base backup if <quote>fast</quote> shutdown
        is requested (Laurenz Albe)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow <filename>recovery.conf</filename> boolean variables to take the
        same range of string values as <filename>postgresql.conf</filename>
        boolean variables
        (Bruce)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Monitoring</title>
     <itemizedlist>

      <listitem>
       <para>
        Add <function>pg_conf_load_time()</function> to report when
        the <productname>PostgreSQL</productname> configuration files were last loaded
        (George Gensure)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <function>pg_terminate_backend()</function> to safely terminate a
        backend (the <literal>SIGTERM</literal> signal works also) (Tom, Bruce)
       </para>

       <para>
        While it's always been possible to <literal>SIGTERM</literal> a single
        backend, this was previously considered unsupported; and testing
        of the case found some bugs that are now fixed.
       </para>
      </listitem>

      <listitem>
       <para>
        Add ability to track user-defined functions' call counts and
        runtimes (Martin Pihlak)
       </para>

       <para>
        Function statistics appear in a new system view,
        <literal>pg_stat_user_functions</literal>.  Tracking is controlled
        by the new parameter <varname>track_functions</varname>.
       </para>
      </listitem>

      <listitem>
       <para>
        Allow specification of the maximum query string size in
        <literal>pg_stat_activity</literal> via new
        <varname>track_activity_query_size</varname> parameter (Thomas Lee)
       </para>
      </listitem>

      <listitem>
       <para>
        Increase the maximum line length sent to <application>syslog</application>, in
        hopes of improving performance (Tom)
       </para>
      </listitem>

      <listitem>
       <para>
        Add read-only configuration variables <varname>segment_size</varname>,
        <varname>wal_block_size</varname>, and <varname>wal_segment_size</varname>
        (Bernd Helmle)
       </para>
      </listitem>

      <listitem>
       <para>
        When reporting a deadlock, report the text of all queries involved
        in the deadlock to the server log  (Itagaki Takahiro)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <function>pg_stat_get_activity(pid)</function> function to return
        information about a specific process id (Magnus)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow the location of the server's statistics file to be specified
        via <varname>stats_temp_directory</varname> (Magnus)
       </para>

       <para>
        This allows the statistics file to be placed in a
        <acronym>RAM</acronym>-resident directory to reduce I/O requirements.
        On startup/shutdown, the file is copied to its traditional location
        (<literal>$PGDATA/global/</literal>) so it is preserved across restarts.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Queries</title>
    <itemizedlist>

     <listitem>
      <para>
       Add support for <literal>WINDOW</literal> functions (Hitoshi Harada)
      </para>
     </listitem>

     <listitem>
      <para>
       Add support for <literal>WITH</literal> clauses (CTEs), including <literal>WITH
       RECURSIVE</literal> (Yoshiyuki Asaba, Tatsuo Ishii, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <command>TABLE</command> command (Peter)
      </para>

      <para>
       <literal>TABLE tablename</literal> is a SQL standard short-hand for
       <literal>SELECT * FROM tablename</literal>.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <literal>AS</literal> to be optional when specifying a
       <command>SELECT</command> (or <literal>RETURNING</literal>) column output
       label (Hiroshi Saito)
      </para>

      <para>
       This works so long as the column label is not any
       <productname>PostgreSQL</productname> keyword; otherwise <literal>AS</literal> is still
       needed.
      </para>
     </listitem>

     <listitem>
      <para>
       Support set-returning functions in <command>SELECT</command> result lists
       even for functions that return their result via a tuplestore (Tom)
      </para>

      <para>
       In particular, this means that functions written in PL/PgSQL
       and other PL languages can now be called this way.
      </para>
     </listitem>

     <listitem>
      <para>
       Support set-returning functions in the output of aggregation
       and grouping queries (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <command>SELECT FOR UPDATE</command>/<literal>SHARE</literal> to work
       on inheritance trees (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Add infrastructure for <acronym>SQL/MED</acronym> (Martin Pihlak,
       Peter)
      </para>

      <para>
       There are no remote or external <acronym>SQL/MED</acronym> capabilities
       yet, but this change provides a standardized and future-proof
       system for managing connection information for modules like
       <filename>dblink</filename> and <filename>plproxy</filename>.
      </para>
     </listitem>

     <listitem>
      <para>
       Invalidate cached plans when referenced schemas, functions, operators,
       or operator classes are modified (Martin Pihlak, Tom)
      </para>

      <para>
       This improves the system's ability to respond to on-the-fly
       DDL changes.
      </para>
     </listitem>
     <listitem>
      <para>
       Allow comparison of composite types and allow arrays of
       anonymous composite types (Tom)
      </para>

      <para>
       This allows constructs such as
       <literal>row(1, 1.1) = any (array[row(7, 7.7), row(1, 1.0)])</literal>.
       This is particularly useful in recursive queries.
      </para>
     </listitem>

     <listitem>
      <para>
       Add support for Unicode string literal and identifier specifications
       using code points, e.g. <literal>U&amp;'d\0061t\+000061'</literal>
       (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Reject <literal>\000</literal> in string literals and <command>COPY</command> data
       (Tom)
      </para>

      <para>
       Previously, this was accepted but had the effect of terminating
       the string contents.
      </para>
     </listitem>

     <listitem>
      <para>
       Improve the parser's ability to report error locations (Tom)
      </para>

      <para>
       An error location is now reported for many semantic errors,
       such as mismatched datatypes, that previously could not be localized.
      </para>
     </listitem>

    </itemizedlist>

    <sect4>
     <title><command>TRUNCATE</command></title>
     <itemizedlist>

      <listitem>
       <para>
        Support statement-level <literal>ON TRUNCATE</literal> triggers (Simon)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <literal>RESTART</literal>/<literal>CONTINUE IDENTITY</literal> options
        for <command>TRUNCATE TABLE</command>
        (Zoltan Boszormenyi)
       </para>

       <para>
        The start value of a sequence can be changed by <command>ALTER
        SEQUENCE START WITH</command>.
       </para>
      </listitem>

      <listitem>
       <para>
        Allow <command>TRUNCATE tab1, tab1</command> to succeed (Bruce)
       </para>
      </listitem>

      <listitem>
       <para>
        Add a separate <command>TRUNCATE</command> permission (Robert Haas)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><command>EXPLAIN</command></title>
     <itemizedlist>

      <listitem>
       <para>
        Make <command>EXPLAIN VERBOSE</command> show the output columns of each
        plan node (Tom)
       </para>

       <para>
        Previously <command>EXPLAIN VERBOSE</command> output an internal
        representation of the query plan.  (That behavior is now
        available via <varname>debug_print_plan</varname>.)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <command>EXPLAIN</command> identify subplans and initplans with
        individual labels (Tom)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <command>EXPLAIN</command> honor <varname>debug_print_plan</varname> (Tom)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow <command>EXPLAIN</command> on <command>CREATE TABLE AS</command> (Peter)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><literal>LIMIT</literal>/<literal>OFFSET</literal></title>
     <itemizedlist>

      <listitem>
       <para>
        Allow sub-selects in <literal>LIMIT</literal> and <literal>OFFSET</literal> (Tom)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <acronym>SQL</acronym>-standard syntax for
        <literal>LIMIT</literal>/<literal>OFFSET</literal> capabilities (Peter)
       </para>

       <para>
        To wit,
        <literal>OFFSET num {ROW|ROWS} FETCH {FIRST|NEXT} [num] {ROW|ROWS}
        ONLY</literal>.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Object Manipulation</title>
    <itemizedlist>

     <listitem>
      <para>
       Add support for column-level privileges (Stephen Frost, KaiGai
       Kohei)
      </para>
     </listitem>

     <listitem>
      <para>
       Refactor multi-object <command>DROP</command> operations to reduce the
       need for <literal>CASCADE</literal> (Alex Hunsaker)
      </para>

      <para>
       For example, if table <literal>B</literal> has a dependency on table
       <literal>A</literal>, the command <literal>DROP TABLE A, B</literal> no longer
       requires the <literal>CASCADE</literal> option.
      </para>
     </listitem>

     <listitem>
      <para>
       Fix various problems with concurrent <command>DROP</command> commands
       by ensuring that locks are taken before we begin to drop dependencies
       of an object (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Improve reporting of dependencies during <command>DROP</command>
       commands (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <literal>WITH [NO] DATA</literal> clause to <command>CREATE TABLE
       AS</command>, per the <acronym>SQL</acronym> standard (Peter, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Add support for user-defined I/O conversion casts (Heikki)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <command>CREATE AGGREGATE</command> to use an <type>internal</type>
       transition datatype (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <literal>LIKE</literal> clause to <command>CREATE TYPE</command> (Tom)
      </para>

      <para>
       This simplifies creation of data types that use the same internal
       representation as an existing type.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow specification of the type category and <quote>preferred</quote>
       status for user-defined base types (Tom)
      </para>

      <para>
       This allows more control over the coercion behavior of user-defined
       types.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <command>CREATE OR REPLACE VIEW</command> to add columns to the
       end of a view (Robert Haas)
      </para>
     </listitem>

    </itemizedlist>

    <sect4>
     <title><command>ALTER</command></title>
     <itemizedlist>

      <listitem>
       <para>
        Add <command>ALTER TYPE RENAME</command> (Petr Jelinek)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <command>ALTER SEQUENCE ... RESTART</command> (with no parameter) to
        reset a sequence to its initial value (Zoltan Boszormenyi)
       </para>
      </listitem>

      <listitem>
       <para>
        Modify the <command>ALTER TABLE</command> syntax to allow all reasonable
        combinations for tables, indexes, sequences, and views (Tom)
       </para>

       <para>
        This change allows the following new syntaxes:

        <itemizedlist>
         <listitem>
          <para>
           <command>ALTER SEQUENCE OWNER TO</command>
          </para>
         </listitem>
         <listitem>
          <para>
           <command>ALTER VIEW ALTER COLUMN SET/DROP DEFAULT</command>
          </para>
         </listitem>
         <listitem>
          <para>
           <command>ALTER VIEW OWNER TO</command>
          </para>
         </listitem>
         <listitem>
          <para>
           <command>ALTER VIEW SET SCHEMA</command>
          </para>
         </listitem>
        </itemizedlist>

        There is no actual new functionality here, but formerly
        you had to say <command>ALTER TABLE</command> to do these things,
        which was confusing.
       </para>
      </listitem>

      <listitem>
       <para>
        Add support for the syntax <command>ALTER TABLE ... ALTER COLUMN
        ... SET DATA TYPE</command> (Peter)
       </para>

       <para>
        This is <acronym>SQL</acronym>-standard syntax for functionality that
        was already supported.
       </para>
      </listitem>

      <listitem>
       <para>
        Make <command>ALTER TABLE SET WITHOUT OIDS</command> rewrite the table
        to physically remove <type>OID</type> values (Tom)
       </para>

       <para>
        Also, add <command>ALTER TABLE SET WITH OIDS</command> to rewrite the
        table to add <type>OID</type>s.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Database Manipulation</title>
     <itemizedlist>

      <listitem>
       <para>
        Improve reporting of
        <command>CREATE</command>/<command>DROP</command>/<command>RENAME DATABASE</command>
        failure when uncommitted prepared transactions are the cause
        (Tom)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <varname>LC_COLLATE</varname> and <varname>LC_CTYPE</varname> into
        per-database settings (Radek Strnad, Heikki)
       </para>

       <para>
        This makes collation similar to encoding, which was always
        configurable per database.
       </para>
      </listitem>

      <listitem>
       <para>
        Improve checks that the database encoding, collation
        (<varname>LC_COLLATE</varname>), and character classes
        (<varname>LC_CTYPE</varname>) match (Heikki, Tom)
       </para>

       <para>
        Note in particular that a new database's encoding and locale
        settings can be changed only when copying from <literal>template0</literal>.
        This prevents possibly copying data that doesn't match the settings.
       </para>
      </listitem>

      <listitem>
       <para>
        Add <command>ALTER DATABASE SET TABLESPACE</command> to move a database
        to a new tablespace (Guillaume Lelarge, Bernd Helmle)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Utility Operations</title>

    <itemizedlist>

     <listitem>
      <para>
       Add a <literal>VERBOSE</literal> option to the <command>CLUSTER</command> command and
       <application>clusterdb</application> (Jim Cox)
      </para>
     </listitem>

     <listitem>
      <para>
       Decrease memory requirements for recording pending trigger
       events (Tom)
      </para>
     </listitem>

    </itemizedlist>

    <sect4>
     <title>Indexes</title>
     <itemizedlist>

      <listitem>
       <para>
        Dramatically improve the speed of building and accessing hash
        indexes (Tom Raney, Shreya Bhargava)
       </para>

       <para>
        This allows hash indexes to be sometimes faster than btree
        indexes.  However, hash indexes are still not crash-safe.
       </para>
      </listitem>

      <listitem>
       <para>
        Make hash indexes store only the hash code, not the full value of
        the indexed column (Xiao Meng)
       </para>

       <para>
        This greatly reduces the size of hash indexes for long indexed
        values, improving performance.
       </para>
      </listitem>

      <listitem>
       <para>
        Implement fast update option for gin indexes (Teodor, Oleg)
       </para>

       <para>
        This option greatly improves update speed at a small penalty in search
        speed.
       </para>
      </listitem>

      <listitem>
       <para>
        <literal>xxx_pattern_ops</literal> indexes can now be used for simple
        equality comparisons, not only for <literal>LIKE</literal> (Tom)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Full Text Indexes</title>
     <itemizedlist>

      <listitem>
       <para>
        Remove the requirement to use <literal>@@@</literal> when doing
        <acronym>gin</acronym> weighted lookups on full text indexes (Tom, Teodor)
       </para>

       <para>
        The normal <literal>@@</literal> text search operator can be used
        instead.
       </para>
      </listitem>

      <listitem>
       <para>
        Add an optimizer selectivity function for <literal>@@</literal> text
        search operations (Jan Urbanski)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow prefix matching in full text searches (Teodor Sigaev,
        Oleg Bartunov)
       </para>
      </listitem>

      <listitem>
       <para>
        Support multi-column <acronym>gin</acronym> indexes (Teodor Sigaev)
       </para>
      </listitem>

      <listitem>
       <para>
        Improve support for Nepali language and Devanagari alphabet (Teodor)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><command>VACUUM</command></title>
     <itemizedlist>

      <listitem>
       <para>
        Track free space in separate per-relation <quote>fork</quote> files (Heikki)
       </para>

       <para>
        Free space discovered by <command>VACUUM</command> is now recorded in
        <filename>*_fsm</filename> files, rather than in a fixed-sized shared memory
        area.  The <varname>max_fsm_pages</varname> and <varname>max_fsm_relations</varname>
        settings have been removed, greatly simplifying administration of
        free space management.
       </para>
      </listitem>

      <listitem>
       <para>
        Add a visibility map to track pages that do not require
        vacuuming (Heikki)
       </para>

       <para>
        This allows <command>VACUUM</command> to avoid scanning all of
        a table when only a portion of the table needs vacuuming.
        The visibility map is stored in per-relation <quote>fork</quote> files.
       </para>
      </listitem>

      <listitem>
       <para>
        Add <varname>vacuum_freeze_table_age</varname> parameter to control
        when <command>VACUUM</command> should ignore the visibility map and
        do a full table scan to freeze tuples (Heikki)
       </para>
      </listitem>

      <listitem>
       <para>
        Track transaction snapshots more carefully (Alvaro)
       </para>

       <para>
        This improves <command>VACUUM</command>'s ability to reclaim space
        in the presence of long-running transactions.
       </para>
      </listitem>

      <listitem>
       <para>
        Add ability to specify per-relation autovacuum and <acronym>TOAST</acronym>
        parameters in <command>CREATE TABLE</command> (Alvaro, Euler Taveira de
        Oliveira)
       </para>

       <para>
        Autovacuum options used to be stored in a system table.
       </para>
      </listitem>

      <listitem>
       <para>
        Add <literal>--freeze</literal> option to <application>vacuumdb</application>
        (Bruce)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Data Types</title>
    <itemizedlist>

     <listitem>
      <para>
       Add a <literal>CaseSensitive</literal> option for text search synonym
       dictionaries (Simon)
      </para>
     </listitem>

     <listitem>
      <para>
       Improve the precision of <type>NUMERIC</type> division (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Add basic arithmetic operators for <type>int2</type> with <type>int8</type>
       (Tom)
      </para>

      <para>
       This eliminates the need for explicit casting in some situations.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <type>UUID</type> input to accept an optional hyphen after
       every fourth digit (Robert Haas)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <literal>on</literal>/<literal>off</literal> as input for the boolean data type
       (Itagaki Takahiro)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow spaces around <literal>NaN</literal> in the input string for
       type <type>numeric</type> (Sam Mason)
      </para>
     </listitem>

    </itemizedlist>

    <sect4>
     <title>Temporal Data Types</title>
     <itemizedlist>

      <listitem>
       <para>
        Reject year <literal>0 BC</literal> and years <literal>000</literal> and
        <literal>0000</literal> (Tom)
       </para>

       <para>
        Previously these were interpreted as <literal>1 BC</literal>.
        (Note: years <literal>0</literal> and <literal>00</literal> are still assumed to be
        the year 2000.)
       </para>
      </listitem>

      <listitem>
       <para>
        Include <literal>SGT</literal> (Singapore time) in the default list of
        known time zone abbreviations (Tom)
       </para>
      </listitem>

      <listitem>
       <para>
        Support <literal>infinity</literal> and <literal>-infinity</literal> as
        values of type <type>date</type> (Tom)
       </para>
      </listitem>

      <listitem>
       <para>
        Make parsing of <type>interval</type> literals more standard-compliant
        (Tom, Ron Mayer)
       </para>

       <para>
        For example, <literal>INTERVAL '1' YEAR</literal> now does what it's
        supposed to.
       </para>
      </listitem>

      <listitem>
       <para>
        Allow <type>interval</type> fractional-seconds precision to be specified
        after the <literal>second</literal> keyword, for <acronym>SQL</acronym> standard
        compliance (Tom)
       </para>

       <para>
        Formerly the precision had to be specified after the keyword
        <type>interval</type>.  (For backwards compatibility, this syntax is still
        supported, though deprecated.)  Data type definitions will now be
        output using the standard format.
       </para>
      </listitem>

      <listitem>
       <para>
        Support the <acronym>IS0 8601</acronym> <type>interval</type> syntax (Ron
        Mayer, Kevin Grittner)
       </para>

       <para>
        For example, <literal>INTERVAL 'P1Y2M3DT4H5M6.7S'</literal> is now
        supported.
       </para>
      </listitem>

      <listitem>
       <para>
        Add <varname>IntervalStyle</varname> parameter
        which controls how <type>interval</type> values are output (Ron Mayer)
       </para>

       <para>
        Valid values are:  <literal>postgres</literal>, <literal>postgres_verbose</literal>,
        <literal>sql_standard</literal>, <literal>iso_8601</literal>.  This setting also
        controls the handling of negative <type>interval</type> input when only
        some fields have positive/negative designations.
       </para>
      </listitem>

      <listitem>
       <para>
        Improve consistency of handling of fractional seconds in
        <type>timestamp</type> and <type>interval</type> output (Ron Mayer)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Arrays</title>
     <itemizedlist>

      <listitem>
       <para>
        Improve the handling of casts applied to <literal>ARRAY[]</literal>
        constructs, such as <literal>ARRAY[...]::integer[]</literal>
        (Brendan Jurd)
       </para>

       <para>
        Formerly <productname>PostgreSQL</productname> attempted to determine a data type
        for the <literal>ARRAY[]</literal> construct without reference to the ensuing
        cast.  This could fail unnecessarily in many cases, in particular when
        the <literal>ARRAY[]</literal> construct was empty or contained only
        ambiguous entries such as <literal>NULL</literal>.  Now the cast is consulted
        to determine the type that the array elements must be.
       </para>
      </listitem>

      <listitem>
       <para>
        Make <acronym>SQL</acronym>-syntax <type>ARRAY</type> dimensions optional
        to match the <acronym>SQL</acronym> standard (Peter)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <function>array_ndims()</function> to return the number
        of dimensions of an array (Robert Haas)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <function>array_length()</function> to return the length
        of an array for a specified dimension (Jim Nasby, Robert
        Haas, Peter Eisentraut)
       </para>
      </listitem>

      <listitem>
       <para>
        Add aggregate function <function>array_agg()</function>, which
        returns all aggregated values as a single array (Robert Haas,
        Jeff Davis, Peter)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <function>unnest()</function>, which converts an array to
        individual row values (Tom)
       </para>

       <para>
        This is the opposite of <function>array_agg()</function>.
       </para>
      </listitem>

      <listitem>
       <para>
        Add <function>array_fill()</function> to create arrays initialized with
        a value (Pavel Stehule)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <function>generate_subscripts()</function> to simplify generating
        the range of an array's subscripts (Pavel Stehule)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Wide-Value Storage (<acronym>TOAST</acronym>)</title>
     <itemizedlist>

      <listitem>
       <para>
        Consider <acronym>TOAST</acronym> compression on values as short as
        32 bytes (previously 256 bytes) (Greg Stark)
       </para>
      </listitem>

      <listitem>
       <para>
        Require 25% minimum space savings before using <acronym>TOAST</acronym>
        compression (previously 20% for small values and any-savings-at-all
        for large values) (Greg)
       </para>
      </listitem>

      <listitem>
       <para>
        Improve <acronym>TOAST</acronym> heuristics for rows that have a mix of large
        and small toastable fields, so that we prefer to push large values out
        of line and don't compress small values unnecessarily (Greg, Tom)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Functions</title>
    <itemizedlist>

     <listitem>
      <para>
       Document that <function>setseed()</function> allows values from
       <literal>-1</literal> to <literal>1</literal> (not just <literal>0</literal> to
       <literal>1</literal>), and enforce the valid range (Kris Jurka)
      </para>
     </listitem>

     <listitem>
      <para>
       Add server-side function <function>lo_import(filename, oid)</function>
       (Tatsuo)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <function>quote_nullable()</function>, which behaves like
       <function>quote_literal()</function> but returns the string <literal>NULL</literal> for
       a null argument (Brendan Jurd)
      </para>
     </listitem>

     <listitem>
      <para>
       Improve full text search <function>headline()</function> function to
       allow extracting several fragments of text (Sushant Sinha)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <function>suppress_redundant_updates_trigger()</function> trigger
       function to avoid overhead for non-data-changing updates (Andrew)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <function>div(numeric, numeric)</function> to perform <type>numeric</type>
       division without rounding (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <type>timestamp</type> and <type>timestamptz</type> versions of
       <function>generate_series()</function> (Hitoshi Harada)
      </para>
     </listitem>

    </itemizedlist>

    <sect4>
     <title>Object Information Functions</title>
     <itemizedlist>

      <listitem>
       <para>
        Implement <function>current_query()</function> for use by functions
        that need to know the currently running query (Tomas Doran)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <function>pg_get_keywords()</function> to return a list of the
        parser keywords (Dave Page)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <function>pg_get_functiondef()</function> to see a function's
        definition (Abhijit Menon-Sen)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow the second argument of <function>pg_get_expr()</function> to be zero
        when deparsing an expression that does not contain variables (Tom)
       </para>
      </listitem>

      <listitem>
       <para>
        Modify <function>pg_relation_size()</function> to use <literal>regclass</literal>
        (Heikki)
       </para>

       <para>
        <function>pg_relation_size(data_type_name)</function> no longer works.
       </para>
      </listitem>

      <listitem>
       <para>
        Add <literal>boot_val</literal> and <literal>reset_val</literal> columns to
        <literal>pg_settings</literal> output (Greg Smith)
       </para>
      </listitem>

      <listitem>
       <para>
        Add source file name and line number columns to
        <literal>pg_settings</literal> output for variables set in a configuration
        file (Magnus, Alvaro)
       </para>

       <para>
        For security reasons, these columns are only visible to superusers.
       </para>
      </listitem>

      <listitem>
       <para>
        Add support for <varname>CURRENT_CATALOG</varname>,
        <varname>CURRENT_SCHEMA</varname>, <varname>SET CATALOG</varname>, <varname>SET
        SCHEMA</varname> (Peter)
       </para>

       <para>
        These provide <acronym>SQL</acronym>-standard syntax for existing features.
       </para>
      </listitem>

      <listitem>
       <para>
        Add <function>pg_typeof()</function> which returns the data type
        of any value (Brendan Jurd)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <function>version()</function> return information about whether
        the server is a 32- or 64-bit binary (Bruce)
       </para>
      </listitem>

      <listitem>
       <para>
        Fix the behavior of information schema columns
        <structfield>is_insertable_into</structfield> and <structfield>is_updatable</structfield> to
        be consistent (Peter)
       </para>
      </listitem>

      <listitem>
       <para>
        Improve the behavior of information schema
        <structfield>datetime_precision</structfield> columns (Peter)
       </para>

       <para>
        These columns now show zero for <type>date</type> columns, and 6
        (the default precision) for <type>time</type>, <type>timestamp</type>, and
        <type>interval</type> without a declared precision, rather than showing
        null as formerly.
       </para>
      </listitem>

      <listitem>
       <para>
        Convert remaining builtin set-returning functions to use
        <literal>OUT</literal> parameters (Jaime Casanova)
       </para>

       <para>
        This makes it possible to call these functions without specifying
        a column list:  <function>pg_show_all_settings()</function>,
        <function>pg_lock_status()</function>, <function>pg_prepared_xact()</function>,
        <function>pg_prepared_statement()</function>, <function>pg_cursor()</function>
       </para>
      </listitem>

      <listitem>
       <para>
        Make <function>pg_*_is_visible()</function> and
        <function>has_*_privilege()</function> functions return <literal>NULL</literal>
        for invalid OIDs, rather than reporting an error (Tom)
       </para>
      </listitem>

      <listitem>
       <para>
        Extend <function>has_*_privilege()</function> functions to allow inquiring
        about the OR of multiple privileges in one call (Stephen
        Frost, Tom)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <function>has_column_privilege()</function> and
        <function>has_any_column_privilege()</function> functions (Stephen
        Frost, Tom)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Function Creation</title>
     <itemizedlist>

      <listitem>
       <para>
        Support variadic functions (functions with a variable number
        of arguments) (Pavel Stehule)
       </para>

       <para>
        Only trailing arguments can be optional, and they all must be
        of the same data type.
       </para>
      </listitem>

      <listitem>
       <para>
        Support default values for function arguments (Pavel Stehule)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <command>CREATE FUNCTION ... RETURNS TABLE</command> clause (Pavel
        Stehule)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow <acronym>SQL</acronym>-language functions to return the output
        of an <command>INSERT</command>/<command>UPDATE</command>/<command>DELETE</command>
        <literal>RETURNING</literal> clause (Tom)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>PL/PgSQL Server-Side Language</title>
     <itemizedlist>

      <listitem>
       <para>
        Support <literal>EXECUTE USING</literal> for easier insertion of data
        values into a dynamic query string (Pavel Stehule)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow looping over the results of a cursor using a <literal>FOR</literal>
        loop (Pavel Stehule)
       </para>
      </listitem>

      <listitem>
       <para>
        Support <literal>RETURN QUERY EXECUTE</literal> (Pavel
        Stehule)
       </para>
      </listitem>

      <listitem>
       <para>
        Improve the <literal>RAISE</literal> command (Pavel Stehule)

        <itemizedlist>
         <listitem>
          <para>
           Support <literal>DETAIL</literal> and <literal>HINT</literal> fields
          </para>
         </listitem>
         <listitem>
          <para>
           Support specification of the <literal>SQLSTATE</literal> error code
          </para>
         </listitem>
         <listitem>
          <para>
           Support an exception name parameter
          </para>
         </listitem>
         <listitem>
          <para>
           Allow <literal>RAISE</literal> without parameters in an exception
           block to re-throw the current error
          </para>
         </listitem>
        </itemizedlist>
       </para>
      </listitem>

      <listitem>
       <para>
        Allow specification of <varname>SQLSTATE</varname> codes
        in <literal>EXCEPTION</literal> lists (Pavel Stehule)
       </para>

       <para>
        This is useful for handling custom <varname>SQLSTATE</varname> codes.
       </para>
      </listitem>

      <listitem>
       <para>
        Support the <literal>CASE</literal> statement (Pavel Stehule)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <command>RETURN QUERY</command> set the special <literal>FOUND</literal> and
        <command>GET DIAGNOSTICS</command> <literal>ROW_COUNT</literal> variables
        (Pavel Stehule)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <command>FETCH</command> and <command>MOVE</command> set the
        <command>GET DIAGNOSTICS</command> <literal>ROW_COUNT</literal> variable
        (Andrew Gierth)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <command>EXIT</command> without a label always exit the innermost
        loop (Tom)
       </para>

       <para>
        Formerly, if there were a <literal>BEgin</literal> block more closely nested
        than any loop, it would exit that block instead.  The new behavior
        matches Oracle(TM) and is also what was previously stated by our own
        documentation.
       </para>
      </listitem>

      <listitem>
       <para>
        Make processing of string literals and nested block comments
        match the main SQL parser's processing (Tom)
       </para>

       <para>
        In particular, the format string in <command>RAISE</command> now works
        the same as any other string literal, including being subject
        to <varname>standard_conforming_strings</varname>.  This change also
        fixes other cases in which valid commands would fail when
        <varname>standard_conforming_strings</varname> is on.
       </para>
      </listitem>

      <listitem>
       <para>
        Avoid memory leakage when the same function is called at varying
        exception-block nesting depths (Tom)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Client Applications</title>

    <itemizedlist>

     <listitem>
      <para>
       Fix <literal>pg_ctl restart</literal> to preserve command-line arguments
       (Bruce)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <literal>-w</literal>/<literal>--no-password</literal> option that
       prevents password prompting in all utilities that have a
       <literal>-W</literal>/<literal>--password</literal> option (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Remove <option>-q</option> (quiet) option of <application>createdb</application>,
       <application>createuser</application>, <application>dropdb</application>,
       <application>dropuser</application> (Peter)
      </para>

      <para>
       These options have had no effect since <productname>PostgreSQL</productname>
       8.3.
      </para>
     </listitem>

    </itemizedlist>

    <sect4>
     <title><application>psql</application></title>
     <itemizedlist>

      <listitem>
       <para>
        Remove verbose startup banner; now just suggest <literal>help</literal>
        (Joshua Drake)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <literal>help</literal> show common backslash commands (Greg
        Sabino Mullane)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <literal>\pset format wrapped</literal> mode to wrap output to the
        screen width, or file/pipe output too if <literal>\pset columns</literal>
        is set (Bryce Nesbitt)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow all supported spellings of boolean values in <command>\pset</command>,
        rather than just <literal>on</literal> and <literal>off</literal> (Bruce)
       </para>

       <para>
        Formerly, any string other than <quote>off</quote> was silently taken
        to mean <literal>true</literal>.  <application>psql</application> will now complain
        about unrecognized spellings (but still take them as <literal>true</literal>).
       </para>
      </listitem>

      <listitem>
       <para>
        Use the pager for wide output (Bruce)
       </para>
      </listitem>

      <listitem>
       <para>
        Require a space between a one-letter backslash command and its first
        argument (Bernd Helmle)
       </para>

       <para>
        This removes a historical source of ambiguity.
       </para>
      </listitem>

      <listitem>
       <para>
        Improve tab completion support for schema-qualified and
        quoted identifiers (Greg Sabino Mullane)
       </para>
      </listitem>

      <listitem>
       <para>
        Add optional <literal>on</literal>/<literal>off</literal> argument for
        <command>\timing</command> (David Fetter)
       </para>
      </listitem>

      <listitem>
       <para>
        Display access control rights on multiple lines (Brendan
        Jurd, Andreas Scherbaum)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <command>\l</command> show database access privileges (Andrew Gilligan)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <command>\l+</command> show database sizes, if permissions
        allow (Andrew Gilligan)
       </para>
      </listitem>

      <listitem>
       <para>
        Add the <command>\ef</command> command to edit function definitions
        (Abhijit Menon-Sen)
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><application>psql</application> \d* commands</title>

     <itemizedlist>

      <listitem>
       <para>
        Make <command>\d*</command> commands that do not have a pattern argument
        show system objects only if the <literal>S</literal> modifier is specified
        (Greg Sabino Mullane, Bruce)
       </para>

       <para>
        The former behavior was inconsistent across different variants
        of <command>\d</command>, and in most cases it provided no easy way to see
        just user objects.
       </para>
      </listitem>

      <listitem>
       <para>
        Improve <command>\d*</command> commands to work with older
        <productname>PostgreSQL</productname> server versions (back to 7.4),
        not only the current server version
        (Guillaume Lelarge)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <command>\d</command> show foreign-key constraints that reference
        the selected table (Kenneth D'Souza)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <command>\d</command> on a sequence show its column values
        (Euler Taveira de Oliveira)
       </para>
      </listitem>

      <listitem>
       <para>
        Add column storage type and other relation options to the
        <command>\d+</command> display (Gregory Stark, Euler Taveira de
        Oliveira)
       </para>
      </listitem>

      <listitem>
       <para>
        Show relation size in <command>\dt+</command> output (Dickson S.
        Guedes)
       </para>
      </listitem>

      <listitem>
       <para>
        Show the possible values of <literal>enum</literal> types in <command>\dT+</command>
        (David Fetter)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow <command>\dC</command> to accept a wildcard pattern, which matches
        either datatype involved in the cast (Tom)
       </para>
      </listitem>

      <listitem>
       <para>
        Add a function type column to <command>\df</command>'s output, and add
        options to list only selected types of functions (David Fetter)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <command>\df</command> not hide functions that take or return
        type <type>cstring</type> (Tom)
       </para>

       <para>
        Previously, such functions were hidden because most of them are
        datatype I/O functions, which were deemed uninteresting.  The new
        policy about hiding system functions by default makes this wart
        unnecessary.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><application>pg_dump</application></title>
     <itemizedlist>

      <listitem>
       <para>
        Add a <literal>--no-tablespaces</literal> option to
        <application>pg_dump</application>/<application>pg_dumpall</application>/<application>pg_restore</application>
        so that dumps can be restored to clusters that have non-matching
        tablespace layouts (Gavin Roy)
       </para>
      </listitem>

      <listitem>
       <para>
        Remove <option>-d</option> and <option>-D</option> options from
        <application>pg_dump</application> and <application>pg_dumpall</application> (Tom)
       </para>

       <para>
        These options were too frequently confused with the option to
        select a database name in other <productname>PostgreSQL</productname>
        client applications.  The functionality is still available,
        but you must now spell out the long option name
        <option>--inserts</option> or <option>--column-inserts</option>.
       </para>
      </listitem>

      <listitem>
       <para>
        Remove <option>-i</option>/<option>--ignore-version</option> option from
        <application>pg_dump</application> and <application>pg_dumpall</application> (Tom)
       </para>

       <para>
        Use of this option does not throw an error, but it has no
        effect.  This option was removed because the version checks
        are necessary for safety.
       </para>
      </listitem>

      <listitem>
       <para>
        Disable <varname>statement_timeout</varname> during dump and restore
        (Joshua Drake)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <application>pg_dump</application>/<application>pg_dumpall</application> option
        <option>--lock-wait-timeout</option> (David Gould)
       </para>

       <para>
        This allows dumps to fail if unable to acquire a shared lock
        within the specified amount of time.
       </para>
      </listitem>

      <listitem>
       <para>
        Reorder <application>pg_dump</application> <literal>--data-only</literal> output
        to dump tables referenced by foreign keys before
        the referencing tables (Tom)
       </para>

       <para>
        This allows data loads when foreign keys are already present.
        If circular references make a safe ordering impossible, a
        <literal>NOTICE</literal> is issued.
       </para>
      </listitem>

      <listitem>
       <para>
        Allow <application>pg_dump</application>, <application>pg_dumpall</application>, and
        <application>pg_restore</application> to use a specified role (Benedek
        László)
       </para>
      </listitem>

      <listitem>
       <para>
        Allow <application>pg_restore</application> to use multiple concurrent
        connections to do the restore (Andrew)
       </para>

       <para>
        The number of concurrent connections is controlled by the option
        <literal>--jobs</literal>.  This is supported only for custom-format archives.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Programming Tools</title>

    <sect4>
     <title><application>libpq</application></title>
     <itemizedlist>

      <listitem>
       <para>
        Allow the <type>OID</type> to be specified when importing a large
        object, via new function <function>lo_import_with_oid()</function> (Tatsuo)
       </para>
      </listitem>

      <listitem>
       <para>
        Add <quote>events</quote> support (Andrew Chernow, Merlin Moncure)
       </para>

       <para>
        This adds the ability to register callbacks to manage private
        data associated with <structname>PGconn</structname> and <structname>PGresult</structname>
        objects.
       </para>
      </listitem>

      <listitem>
       <para>
        Improve error handling to allow the return of multiple
        error messages as multi-line error reports (Magnus)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <function>PQexecParams()</function> and related functions return
        <varname>PGRES_EMPTY_QUERY</varname> for an empty query (Tom)
       </para>

       <para>
        They previously returned <varname>PGRES_COMMAND_OK</varname>.
       </para>
      </listitem>

      <listitem>
       <para>
        Document how to avoid the overhead of <function>WSACleanup()</function>
        on Windows (Andrew Chernow)
       </para>
      </listitem>

      <listitem>
       <para>
        Do not rely on Kerberos tickets to determine the default database
        username (Magnus)
       </para>

       <para>
        Previously, a Kerberos-capable build of libpq would use the
        principal name from any available Kerberos ticket as default
        database username, even if the connection wasn't using Kerberos
        authentication.  This was deemed inconsistent and confusing.
        The default username is now determined the same way with or
        without Kerberos.  Note however that the database username must still
        match the ticket when Kerberos authentication is used.
       </para>
      </listitem>
     </itemizedlist>

    </sect4>

    <sect4>
     <title><application>libpq</application> <acronym>SSL</acronym> (Secure Sockets Layer)
      support</title>
     <itemizedlist>

      <listitem>
       <para>
        Fix certificate validation for <acronym>SSL</acronym> connections
        (Magnus)
       </para>

       <para>
        <application>libpq</application> now supports verifying both the certificate
        and the name of the server when making <acronym>SSL</acronym>
        connections. If a root certificate is not available to use for
        verification, <acronym>SSL</acronym> connections will fail. The
        <literal>sslmode</literal> parameter is used to enable certificate
        verification and set the level of checking.
        The default is still not to do any verification, allowing connections
        to SSL-enabled servers without requiring a root certificate on the
        client.
       </para>
      </listitem>

      <listitem>
       <para>
        Support wildcard server certificates (Magnus)
       </para>

       <para>
        If a certificate <acronym>CN</acronym> starts with <literal>*</literal>, it will
        be treated as a wildcard when matching the hostname, allowing the
        use of the same certificate for multiple servers.
       </para>
      </listitem>

      <listitem>
       <para>
        Allow the file locations for client certificates to be specified
        (Mark Woodward, Alvaro, Magnus)
       </para>
      </listitem>

      <listitem>
       <para>
        Add a <function>PQinitOpenSSL</function> function to allow greater control
        over OpenSSL/libcrypto initialization (Andrew Chernow)
       </para>
      </listitem>

      <listitem>
       <para>
        Make <application>libpq</application> unregister its <application>OpenSSL</application>
        callbacks when no database connections remain open
        (Bruce, Magnus, Russell Smith)
       </para>

       <para>
        This is required for applications that unload the libpq library,
        otherwise invalid <application>OpenSSL</application> callbacks will remain.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><application>ecpg</application></title>
     <itemizedlist>

      <listitem>
       <para>
        Add localization support for messages (Euler Taveira de
        Oliveira)
       </para>
      </listitem>

      <listitem>
       <para>
        ecpg parser is now automatically generated from the server
        parser (Michael)
       </para>

       <para>
        Previously the ecpg parser was hand-maintained.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Server Programming Interface (<acronym>SPI</acronym>)</title>
     <itemizedlist>

      <listitem>
       <para>
        Add support for single-use plans with out-of-line
        parameters (Tom)
       </para>
      </listitem>

      <listitem>
       <para>
        Add new <varname>SPI_OK_REWRITTEN</varname> return code for
        <function>SPI_execute()</function> (Heikki)
       </para>

       <para>
        This is used when a command is rewritten to another type of
        command.
       </para>
      </listitem>

      <listitem>
       <para>
        Remove unnecessary inclusions from <filename>executor/spi.h</filename> (Tom)
       </para>

       <para>
        SPI-using modules might need to add some <literal>#include</literal>
        lines if they were depending on <filename>spi.h</filename> to include
        things for them.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Build Options</title>
    <itemizedlist>

     <listitem>
      <para>
       Update build system to use <productname>Autoconf</productname> 2.61 (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Require <productname>GNU bison</productname> for source code builds (Peter)
      </para>

      <para>
       This has effectively been required for several years, but now there
       is no infrastructure claiming to support other parser tools.
      </para>
     </listitem>

     <listitem>
      <para>
       Add <application>pg_config</application> <literal>--htmldir</literal> option
       (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Pass <type>float4</type> by value inside the server (Zoltan
       Boszormenyi)
      </para>

      <para>
       Add <application>configure</application> option
       <literal>--disable-float4-byval</literal> to use the old behavior.
       External C functions that use old-style (version 0) call convention
       and pass or return <type>float4</type> values will be broken by this
       change, so you may need the <application>configure</application> option if you
       have such functions and don't want to update them.
      </para>
     </listitem>

     <listitem>
      <para>
       Pass <type>float8</type>, <type>int8</type>, and related datatypes
       by value inside the server on 64-bit platforms (Zoltan Boszormenyi)
      </para>

      <para>
       Add <application>configure</application> option
       <literal>--disable-float8-byval</literal> to use the old behavior.
       As above, this change might break old-style external C functions.
      </para>
     </listitem>

     <listitem>
      <para>
       Add configure options <literal>--with-segsize</literal>,
       <literal>--with-blocksize</literal>, <literal>--with-wal-blocksize</literal>,
       <literal>--with-wal-segsize</literal> (Zdenek Kotala, Tom)
      </para>

      <para>
       This simplifies build-time control over several constants that
       previously could only be changed by editing
       <filename>pg_config_manual.h</filename>.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow threaded builds on <productname>Solaris</productname> 2.5 (Bruce)
      </para>
     </listitem>

     <listitem>
      <para>
       Use the system's <function>getopt_long()</function> on <productname>Solaris</productname>
       (Zdenek Kotala, Tom)
      </para>

      <para>
       This makes option processing more consistent with what Solaris users
       expect.
      </para>
     </listitem>

     <listitem>
      <para>
       Add support for the <productname>Sun Studio</productname> compiler on
       <productname>Linux</productname> (Julius Stroffek)
      </para>
     </listitem>

     <listitem>
      <para>
       Append the major version number to the backend <application>gettext</application>
       domain, and the <literal>soname</literal> major version number to
       libraries' <application>gettext</application> domain (Peter)
      </para>

      <para>
       This simplifies parallel installations of multiple versions.
      </para>
     </listitem>

     <listitem>
      <para>
       Add support for code coverage testing with <application>gcov</application>
       (Michelle Caisse)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow out-of-tree builds on <productname>Mingw</productname> and
       <productname>Cygwin</productname> (Richard Evans)
      </para>
     </listitem>

     <listitem>
      <para>
       Fix the use of <productname>Mingw</productname> as a cross-compiling source
       platform (Peter)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Source Code</title>
    <itemizedlist>

     <listitem>
      <para>
       Support 64-bit time zone data files (Heikki)
      </para>

      <para>
       This adds support for daylight saving time (<acronym>DST</acronym>)
       calculations beyond the year 2038.
      </para>
     </listitem>

     <listitem>
      <para>
       Deprecate use of platform's <type>time_t</type> data type (Tom)
      </para>

      <para>
       Some platforms have migrated to 64-bit <type>time_t</type>, some have
       not, and Windows can't make up its mind what it's doing.  Define
       <type>pg_time_t</type> to have the same meaning as <type>time_t</type>,
       but always be 64 bits (unless the platform has no 64-bit integer type),
       and use that type in all module APIs and on-disk data formats.
      </para>
     </listitem>

     <listitem>
      <para>
       Fix bug in handling of the time zone database when cross-compiling
       (Richard Evans)
      </para>
     </listitem>

     <listitem>
      <para>
       Link backend object files in one step, rather than in stages
       (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Improve <application>gettext</application> support to allow better translation
       of plurals (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Add message translation support to the PL languages (Alvaro, Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Add more <application>DTrace</application> probes (Robert Lor)
      </para>
     </listitem>

     <listitem>
      <para>
       Enable <application>DTrace</application> support on <application>Mac OS X
       Leopard</application> and other non-Solaris platforms (Robert Lor)
      </para>
     </listitem>

     <listitem>
      <para>
       Simplify and standardize conversions between C strings and
       <type>text</type> datums, by providing common functions for the purpose
       (Brendan Jurd, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Clean up the <filename>include/catalog/</filename> header files so that
       frontend programs can include them without including
       <filename>postgres.h</filename>
       (Zdenek Kotala)
      </para>
     </listitem>

     <listitem>
      <para>
       Make <type>name</type> char-aligned, and suppress zero-padding of
       <type>name</type> entries in indexes (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Recover better if dynamically-loaded code executes <function>exit()</function>
       (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Add a hook to let plug-ins monitor the executor (Itagaki
       Takahiro)
      </para>
     </listitem>

     <listitem>
      <para>
       Add a hook to allow the planner's statistics lookup behavior to
       be overridden (Simon Riggs)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <function>shmem_startup_hook()</function> for custom shared memory
       requirements (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Replace the index access method <function>amgetmulti</function> entry point
       with <function>amgetbitmap</function>, and extend the API for
       <function>amgettuple</function> to support run-time determination of
       operator lossiness (Heikki, Tom, Teodor)
      </para>

      <para>
       The API for gin and gist opclass <function>consistent</function> functions
       has been extended as well.
      </para>
     </listitem>

     <listitem>
      <para>
       Add support for partial-match searches in <acronym>gin</acronym> indexes
       (Teodor Sigaev, Oleg Bartunov)
      </para>
     </listitem>

     <listitem>
      <para>
       Replace <structname>pg_class</structname> column <structfield>reltriggers</structfield>
       with boolean <structfield>relhastriggers</structfield> (Simon)
      </para>

      <para>
       Also remove unused <structname>pg_class</structname> columns
       <structfield>relukeys</structfield>, <structfield>relfkeys</structfield>, and
       <structfield>relrefs</structfield>.
      </para>
     </listitem>

     <listitem>
      <para>
       Add a <structfield>relistemp</structfield> column to <structname>pg_class</structname>
       to ease identification of temporary tables (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Move platform <acronym>FAQ</acronym>s into the main documentation
       (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Prevent parser input files from being built with any conflicts
       (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Add support for the <literal>KOI8U</literal> (Ukrainian) encoding
       (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Add Japanese message translations (Japan PostgreSQL Users Group)
      </para>

      <para>
       This used to be maintained as a separate project.
      </para>
     </listitem>

     <listitem>
      <para>
       Fix problem when setting <varname>LC_MESSAGES</varname> on
       <application>MSVC</application>-built systems (Hiroshi Inoue, Hiroshi
       Saito, Magnus)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Contrib</title>

    <itemizedlist>

     <listitem>
      <para>
       Add <filename>contrib/auto_explain</filename> to automatically run
       <command>EXPLAIN</command> on queries exceeding a specified duration
       (Itagaki Takahiro, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <filename>contrib/btree_gin</filename> to allow gin indexes to
       handle more datatypes (Oleg, Teodor)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <filename>contrib/citext</filename> to provide a case-insensitive,
       multibyte-aware text data type (David Wheeler)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <filename>contrib/pg_stat_statements</filename> for server-wide
       tracking of statement execution statistics (Itagaki Takahiro)
      </para>
     </listitem>

     <listitem>
      <para>
       Add duration and query mode options to <filename>contrib/pgbench</filename>
       (Itagaki Takahiro)
      </para>
     </listitem>

     <listitem>
      <para>
       Make <filename>contrib/pgbench</filename> use table names
       <structname>pgbench_accounts</structname>, <structname>pgbench_branches</structname>,
       <structname>pgbench_history</structname>, and <structname>pgbench_tellers</structname>,
       rather than just <structname>accounts</structname>, <structname>branches</structname>,
       <structname>history</structname>, and <structname>tellers</structname> (Tom)
      </para>

      <para>
       This is to reduce the risk of accidentally destroying real data
       by running <application>pgbench</application>.
      </para>
     </listitem>

     <listitem>
      <para>
       Fix <filename>contrib/pgstattuple</filename> to handle tables and
       indexes with over 2 billion pages (Tatsuhito Kasahara)
      </para>
     </listitem>

     <listitem>
      <para>
       In <filename>contrib/fuzzystrmatch</filename>, add a version of the
       Levenshtein string-distance function that allows the user to
       specify the costs of insertion, deletion, and substitution
       (Volkan Yazici)
      </para>
     </listitem>

     <listitem>
      <para>
       Make <filename>contrib/ltree</filename> support multibyte encodings
       (laser)
      </para>
     </listitem>

     <listitem>
      <para>
       Enable <filename>contrib/dblink</filename> to use connection information
       stored in the SQL/MED catalogs (Joe Conway)
      </para>
     </listitem>

     <listitem>
      <para>
       Improve <filename>contrib/dblink</filename>'s reporting of errors from
       the remote server (Joe Conway)
      </para>
     </listitem>

     <listitem>
      <para>
       Make <filename>contrib/dblink</filename> set <varname>client_encoding</varname>
       to match the local database's encoding (Joe Conway)
      </para>

      <para>
       This prevents encoding problems when communicating with a remote
       database that uses a different encoding.
      </para>
     </listitem>

     <listitem>
      <para>
       Make sure <filename>contrib/dblink</filename> uses a password supplied
       by the user, and not accidentally taken from the server's
       <filename>.pgpass</filename> file (Joe Conway)
      </para>

      <para>
       This is a minor security enhancement.
      </para>
     </listitem>

     <listitem>
      <para>
       Add <function>fsm_page_contents()</function>
       to <filename>contrib/pageinspect</filename> (Heikki)
      </para>
     </listitem>

     <listitem>
      <para>
       Modify <function>get_raw_page()</function> to support free space map
       (<filename>*_fsm</filename>) files.  Also update
       <filename>contrib/pg_freespacemap</filename>.
      </para>
     </listitem>

     <listitem>
      <para>
       Add support for multibyte encodings to <filename>contrib/pg_trgm</filename>
       (Teodor)
      </para>
     </listitem>

     <listitem>
      <para>
       Rewrite <filename>contrib/intagg</filename> to use new
       functions <function>array_agg()</function> and <function>unnest()</function>
       (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Make <filename>contrib/pg_standby</filename> recover all available WAL before
       failover (Fujii Masao, Simon, Heikki)
      </para>

      <para>
       To make this work safely, you now need to set the new
       <literal>recovery_end_command</literal> option in <filename>recovery.conf</filename>
       to clean up the trigger file after failover. <application>pg_standby</application>
       will no longer remove the trigger file itself.
      </para>
     </listitem>

     <listitem>
      <para>
       <filename>contrib/pg_standby</filename>'s <option>-l</option> option is now a no-op,
       because it is unsafe to use a symlink (Simon)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>
  </sect2>
 </sect1>
